CREATE OR REPLACE TABLE `sb-sandbox-usuarios.sandbox_cumplimiento.t_prueba_CB_Jurisdiccion` AS 

(WITH 
movimientos AS (
    SELECT
        CAST(o.TIPO_DOCUMENTO AS STRING) AS TIPO_DOCUMENTO_TOMADOR,
        CAST(o.KEY_ID_TOMADOR AS STRING) AS NUMERO_DOCUMENTO_TOMADOR,
        m.CODIGO_COMPANIA,
        m.FECHA_TRANSACCION,
        SUM(CASE WHEN m.CODIGO_TIPO_MOVIMIENTO IN (26,115,139,29,25,31,34,30,32,36,33,183,180,191,27,35) THEN m.VALOR_TRANSACCION ELSE 0 END) AS total_retiros,
        COUNT(CASE WHEN m.CODIGO_TIPO_MOVIMIENTO IN (26,115,139,29,25,31,34,30,32,36,33,183,180,191,27,35) THEN 1 ELSE NULL END) AS cantidad_retiros,
        SUM(CASE WHEN m.CODIGO_TIPO_MOVIMIENTO IN (144,20,18,2,17,143,1,4,165,3,24,7,175,118,23,189,22,174,157,172,159,171,13) THEN m.VALOR_TRANSACCION ELSE 0 END) AS total_aportes,
        COUNT(CASE WHEN m.CODIGO_TIPO_MOVIMIENTO IN (144,20,18,2,17,143,1,4,165,3,24,7,175,118,23,189,22,174,157,172,159,171,13) THEN 1 ELSE NULL END) AS cantidad_aportes,
        SUM(CASE WHEN m.CODIGO_TIPO_MOVIMIENTO = 36 THEN m.VALOR_TRANSACCION ELSE 0 END) AS total_sorteos
    FROM `sb-ecosistemaanalitico-lago.capitalizadora.t_movimientos_capitalizadora` AS m
    JOIN `sb-ecosistemaanalitico-lago.capitalizadora.t_operaciones_titulos` AS o
        ON m.NUMERO_TITULO = o.NUMERO_TITULO
    WHERE m.CODIGO_COMPANIA = 1
        AND EXTRACT(YEAR FROM m.FECHA_TRANSACCION) = EXTRACT(YEAR FROM DATE_SUB(DATE_TRUNC(CURRENT_DATE(), MONTH), INTERVAL 12 MONTH))
    GROUP BY 1, 2, 3, 4
),

Ingresos_Activos AS (
    SELECT *,
        NULLIF(VALOR_INGRESOS, 0) / NULLIF(VALOR_EGRESOS, 0) AS ratio_ingresos_egresos,
        NULLIF(VALOR_ACTIVO, 0) / NULLIF(VALOR_PASIVO, 0) AS ratio_activo_pasivo
    FROM (
        SELECT TIPO_DOCUMENTO, KEY_ID, CODIGO_CODAZZI_DIRECCION_1,VALOR_INGRESOS,VALOR_EGRESOS,VALOR_ACTIVO,VALOR_PASIVO 
        FROM `sb-ecosistemaanalitico-lago.seguros_bolivar.t_clientes_naturales`
        UNION ALL
        SELECT TIPO_DOCUMENTO, KEY_ID, CODIGO_CODAZZI_DIRECCION_1,VALOR_INGRESOS,VALOR_EGRESOS,VALOR_ACTIVO,VALOR_PASIVO
        FROM `sb-ecosistemaanalitico-lago.seguros_bolivar.t_clientes_juridicos`)
),

regla_1 AS(
  SELECT 
    c.TIPO_DOCUMENTO,
    c.KEY_ID,
    COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Bajo') AS NIVEL_DE_RIESGO_ASIGNADO,
      CASE
        WHEN COALESCE(m.total_retiros, 0) <= -122629145 THEN
          CASE
            WHEN COALESCE(m.total_aportes, 0) <= 849172 THEN '3 - 1.1'
            WHEN COALESCE(m.total_aportes, 0) > 849172 THEN
              CASE
                WHEN COALESCE(m.cantidad_retiros, 0) <= 378 THEN '13 - 1.2'
                WHEN COALESCE(m.cantidad_retiros, 0) > 378 THEN '8 - 1.3'
              END
          END
        ELSE 'No Segmentado'
      END AS segmento
FROM Ingresos_Activos c
LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_score_clientes` sc
  ON c.TIPO_DOCUMENTO = sc.TIPO_DOCUMENTO AND c.KEY_ID = sc.KEY_ID
LEFT JOIN movimientos m
  ON c.TIPO_DOCUMENTO = m.TIPO_DOCUMENTO_TOMADOR AND c.KEY_ID = m.NUMERO_DOCUMENTO_TOMADOR
LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_jurisdicciones_nivel_riesgo` jr
  ON c.CODIGO_CODAZZI_DIRECCION_1 = jr.C__DIGO_DANE_DEL_MUNICIPIO
),

regla_2 AS(
  SELECT 
    c.TIPO_DOCUMENTO,
    c.KEY_ID,
    COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Bajo') AS NIVEL_DE_RIESGO_ASIGNADO,
      CASE
        WHEN COALESCE(m.total_retiros, 0) > -122629145 AND COALESCE(m.total_retiros, 0) <= -31499431 THEN
          CASE
            WHEN COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Bajo') = 'Alto' THEN '6 - 2.1'
            WHEN COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Bajo') = 'Bajo' THEN '14 - 2.2'
            WHEN COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Bajo') = 'Medio' THEN '2 - 2.3'
          END
        ELSE 'No Segmentado'
      END AS segmento
FROM Ingresos_Activos c
LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_score_clientes` sc
  ON c.TIPO_DOCUMENTO = sc.TIPO_DOCUMENTO AND c.KEY_ID = sc.KEY_ID
LEFT JOIN movimientos m
  ON c.TIPO_DOCUMENTO = m.TIPO_DOCUMENTO_TOMADOR AND c.KEY_ID = m.NUMERO_DOCUMENTO_TOMADOR
LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_jurisdicciones_nivel_riesgo` jr
  ON c.CODIGO_CODAZZI_DIRECCION_1 = jr.C__DIGO_DANE_DEL_MUNICIPIO
),

regla_3 AS(
  SELECT 
    c.TIPO_DOCUMENTO,
    c.KEY_ID,
    COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Bajo') AS NIVEL_DE_RIESGO_ASIGNADO,
      CASE
        WHEN COALESCE(m.total_retiros, 0) > -31499431 AND COALESCE(m.total_retiros, 0) <= -9000000 THEN
          CASE
            WHEN COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Bajo') = 'Alto' THEN '9 - 3.1'
            WHEN COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Bajo') = 'Bajo' THEN '12 - 3.2'
            WHEN COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Bajo') = 'Medio' THEN
              CASE
                WHEN COALESCE(m.total_sorteos, 0) <= 0 THEN '1 - 3.3'
                WHEN COALESCE(m.total_sorteos, 0) > 0 THEN '4 - 3.4'
              END
          END
        ELSE 'No Segmentado'
      END AS segmento
FROM Ingresos_Activos c
LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_score_clientes` sc
  ON c.TIPO_DOCUMENTO = sc.TIPO_DOCUMENTO AND c.KEY_ID = sc.KEY_ID
LEFT JOIN movimientos m
  ON c.TIPO_DOCUMENTO = m.TIPO_DOCUMENTO_TOMADOR AND c.KEY_ID = m.NUMERO_DOCUMENTO_TOMADOR
LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_jurisdicciones_nivel_riesgo` jr
  ON c.CODIGO_CODAZZI_DIRECCION_1 = jr.C__DIGO_DANE_DEL_MUNICIPIO
),

regla_4 AS(
  SELECT 
    c.TIPO_DOCUMENTO,
    c.KEY_ID,
    COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Bajo') AS NIVEL_DE_RIESGO_ASIGNADO,
      CASE
        WHEN COALESCE(m.total_retiros, 0) > -9000000 AND COALESCE(m.total_retiros, 0) <= -4940675 THEN
          CASE
            WHEN COALESCE(m.total_aportes, 0) <= 8394628 THEN
              CASE 
                WHEN COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Bajo') = 'Bajo' THEN '12 - 4.1'
                WHEN COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Bajo') = 'Medio' THEN '11 - 4.2'
              END
            WHEN COALESCE(m.total_aportes, 0) > 8394628 THEN '1 - 4.3'
          END
        ELSE 'No Segmentado'
      END AS segmento
FROM Ingresos_Activos c
LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_score_clientes` sc
  ON c.TIPO_DOCUMENTO = sc.TIPO_DOCUMENTO AND c.KEY_ID = sc.KEY_ID
LEFT JOIN movimientos m
  ON c.TIPO_DOCUMENTO = m.TIPO_DOCUMENTO_TOMADOR AND c.KEY_ID = m.NUMERO_DOCUMENTO_TOMADOR
LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_jurisdicciones_nivel_riesgo` jr
  ON c.CODIGO_CODAZZI_DIRECCION_1 = jr.C__DIGO_DANE_DEL_MUNICIPIO
),

regla_5 AS(
  SELECT 
    c.TIPO_DOCUMENTO,
    c.KEY_ID,
    COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Bajo') AS NIVEL_DE_RIESGO_ASIGNADO,
      CASE
        WHEN COALESCE(m.total_retiros, 0) > -4940675 AND COALESCE(m.total_retiros, 0) <= 0 THEN
          CASE
            WHEN COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Bajo') = 'Alto' THEN '9 - 5.1'
            WHEN COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Bajo') = 'Bajo' THEN '12 - 5.2'
            WHEN COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Bajo') = 'Medio' THEN '14 - 5.3'
          END
        ELSE 'No Segmentado'
      END AS segmento
FROM Ingresos_Activos c
LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_score_clientes` sc
  ON c.TIPO_DOCUMENTO = sc.TIPO_DOCUMENTO AND c.KEY_ID = sc.KEY_ID
LEFT JOIN movimientos m
  ON c.TIPO_DOCUMENTO = m.TIPO_DOCUMENTO_TOMADOR AND c.KEY_ID = m.NUMERO_DOCUMENTO_TOMADOR
LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_jurisdicciones_nivel_riesgo` jr
  ON c.CODIGO_CODAZZI_DIRECCION_1 = jr.C__DIGO_DANE_DEL_MUNICIPIO
),

regla_6 AS(
  SELECT 
    c.TIPO_DOCUMENTO,
    c.KEY_ID,
    COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Bajo') AS NIVEL_DE_RIESGO_ASIGNADO,
      CASE
        WHEN COALESCE(m.total_retiros, 0) > 0 THEN '10 - 6.1'
        ELSE 'No Segmentado'
      END AS segmento
FROM Ingresos_Activos c
LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_score_clientes` sc
  ON c.TIPO_DOCUMENTO = sc.TIPO_DOCUMENTO AND c.KEY_ID = sc.KEY_ID
LEFT JOIN movimientos m
  ON c.TIPO_DOCUMENTO = m.TIPO_DOCUMENTO_TOMADOR AND c.KEY_ID = m.NUMERO_DOCUMENTO_TOMADOR
LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_jurisdicciones_nivel_riesgo` jr
  ON c.CODIGO_CODAZZI_DIRECCION_1 = jr.C__DIGO_DANE_DEL_MUNICIPIO
)

SELECT DISTINCT reglas.TIPO_DOCUMENTO, reglas.KEY_ID, reglas.segmento
FROM (
SELECT TIPO_DOCUMENTO, KEY_ID, segmento FROM regla_1
UNION ALL
SELECT TIPO_DOCUMENTO, KEY_ID, segmento FROM regla_2
UNION ALL
SELECT TIPO_DOCUMENTO, KEY_ID, segmento FROM regla_3
UNION ALL
SELECT TIPO_DOCUMENTO, KEY_ID, segmento FROM regla_4
UNION ALL
SELECT TIPO_DOCUMENTO, KEY_ID, segmento FROM regla_5
UNION ALL
SELECT TIPO_DOCUMENTO, KEY_ID, segmento FROM regla_6
) AS reglas
INNER JOIN 
    `sb-ecosistemaanalitico-lago.capitalizadora.t_clientes_capitalizadora` til
ON 
    LOWER(reglas.TIPO_DOCUMENTO) = LOWER(til.tipo_documento)
    AND reglas.KEY_ID = til.key_id
WHERE date(fecha_corte) >= DATE_TRUNC(DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH), MONTH))

------------------------ CÃ³digo para asignar segmentos por reglas

SELECT segmento, COUNT(*) AS total_clientes
FROM `sb-sandbox-usuarios.sandbox_cumplimiento.t_prueba_CB_Jurisdiccion`
GROUP BY segmento
ORDER BY total_clientes DESC;

------------------------------

CREATE OR REPLACE TABLE `sb-sandbox-usuarios.sandbox_cumplimiento.t_prueba_CB_Jurisdiccion_full` AS 

WITH datos AS (
    SELECT 
        *,  
        CASE 
            WHEN segmento IS NULL OR segmento = 'No Segmentado' THEN 'No Segmentado'
            ELSE SPLIT(segmento, ' - ')[SAFE_OFFSET(0)]
        END AS SEGMENTO_1,
        CASE 
            WHEN segmento IS NULL OR segmento = 'No Segmentado' THEN 100
            ELSE CAST(SPLIT(segmento, ' - ')[SAFE_OFFSET(1)] AS FLOAT64)
        END AS NIVEL_DE_PRIORIDAD
    FROM `sb-sandbox-usuarios.sandbox_cumplimiento.t_prueba_CB_Jurisdiccion`
),
ordenado AS (
    SELECT *,
           ROW_NUMBER() OVER (PARTITION BY KEY_ID ORDER BY NIVEL_DE_PRIORIDAD ASC) AS fila
    FROM datos
)
SELECT *
FROM ordenado
WHERE fila = 1;

-------------------------------- CÃ³digo para asignar segmento definitivo con base en arbol de decisiÃ³n

SELECT SEGMENTO_1, COUNT(*) AS total_clientes
FROM `sb-sandbox-usuarios.sandbox_cumplimiento.t_prueba_CB_Jurisdiccion_full`
GROUP BY SEGMENTO_1
ORDER BY total_clientes DESC;
