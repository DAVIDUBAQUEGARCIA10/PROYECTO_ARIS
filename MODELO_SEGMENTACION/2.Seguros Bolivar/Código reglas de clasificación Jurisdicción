Agrupación de bases cantidades y transaccional

CREATE OR REPLACE TABLE `sb-sandbox-usuarios.sandbox_cumplimiento.t_prueba_SB_Jurisdiccion` AS 

(WITH 
transacciones_valor AS (
    SELECT  DISTINCT
        f.TIPO_DOCUMENTO_TOMADOR, 
        f.NUMERO_DOCUMENTO_TOMADOR, 
        SUM(f.VALOR_TRANSACCION) AS total_transacciones
    FROM `sb-sandbox-usuarios.sandbox_cumplimiento.t_score_clientes` as t
    JOIN (
        SELECT DISTINCT
            CAST(TIPO_DOCUMENTO_TOMADOR AS STRING) AS TIPO_DOCUMENTO_TOMADOR, 
            CAST(NUMERO_DOCUMENTO_TOMADOR AS STRING) AS NUMERO_DOCUMENTO_TOMADOR,
            SUM(VALOR_RECAUDO_TOTAL_MES) AS VALOR_TRANSACCION, 
            CODIGO_COMPANIA, 
            FECHA_RECAUDO AS FECHA_TRANSACCION
        FROM `sb-ecosistemaanalitico-lago.datamart.t_produccion_recaudo_diario`
        GROUP BY 
            CAST(TIPO_DOCUMENTO_TOMADOR AS STRING), 
            CAST(NUMERO_DOCUMENTO_TOMADOR AS STRING),
            CODIGO_COMPANIA,
            FECHA_RECAUDO
        UNION ALL
        SELECT DISTINCT
            CAST(TIPO_DOCUMENTO_TOMADOR AS STRING) AS TIPO_DOCUMENTO_TOMADOR, 
            CAST(KEY_ID_TOMADOR AS STRING) AS NUMERO_DOCUMENTO_TOMADOR, 
            SUM(CAST(LIQUIDADO_BOLIVAR AS int64)) AS VALOR_TRANSACCION,
            CODIGO_COMPANIA, 
            FECHA_ORDEN_PAGO AS FECHA_TRANSACCION
        FROM `sb-ecosistemaanalitico-lago.seguros_bolivar.t_siniestros`
        GROUP BY 
            CAST(TIPO_DOCUMENTO_TOMADOR AS STRING), 
            CAST(KEY_ID_TOMADOR AS STRING),
            CODIGO_COMPANIA,
            FECHA_ORDEN_PAGO
    ) AS f
    ON f.TIPO_DOCUMENTO_TOMADOR = t.TIPO_DOCUMENTO
    AND f.NUMERO_DOCUMENTO_TOMADOR = t.KEY_ID
    WHERE f.CODIGO_COMPANIA = 2
      AND EXTRACT(YEAR FROM f.FECHA_TRANSACCION) = EXTRACT(YEAR FROM DATE_SUB(DATE_TRUNC(CURRENT_DATE(), MONTH), INTERVAL 12 MONTH))
    GROUP BY 
        f.TIPO_DOCUMENTO_TOMADOR, 
        f.NUMERO_DOCUMENTO_TOMADOR
),
transacciones_cantidad AS (
    SELECT DISTINCT
        f.TIPO_DOCUMENTO_TOMADOR, 
        f.NUMERO_DOCUMENTO_TOMADOR, 
        COUNT(f.VALOR_TRANSACCION) AS cantidad_transacciones
    FROM `sb-sandbox-usuarios.sandbox_cumplimiento.t_score_clientes` as t
    JOIN (
        SELECT DISTINCT
            CAST(TIPO_DOCUMENTO_TOMADOR AS STRING) AS TIPO_DOCUMENTO_TOMADOR, 
            CAST(NUMERO_DOCUMENTO_TOMADOR AS STRING) AS NUMERO_DOCUMENTO_TOMADOR,
            VALOR_RECAUDO_TOTAL_MES AS VALOR_TRANSACCION, 
            CODIGO_COMPANIA, 
            FECHA_RECAUDO AS FECHA_TRANSACCION
        FROM `sb-ecosistemaanalitico-lago.datamart.t_produccion_recaudo_diario`
        UNION ALL
        SELECT DISTINCT
            CAST(TIPO_DOCUMENTO_TOMADOR AS STRING) AS TIPO_DOCUMENTO_TOMADOR, 
            CAST(KEY_ID_TOMADOR AS STRING) AS NUMERO_DOCUMENTO_TOMADOR, 
            CAST(LIQUIDADO_BOLIVAR AS int64) AS VALOR_TRANSACCION,
            CODIGO_COMPANIA, 
            FECHA_ORDEN_PAGO AS FECHA_TRANSACCION
        FROM `sb-ecosistemaanalitico-lago.seguros_bolivar.t_siniestros`
    ) AS f
    ON f.TIPO_DOCUMENTO_TOMADOR = t.TIPO_DOCUMENTO
    AND f.NUMERO_DOCUMENTO_TOMADOR = t.KEY_ID
    WHERE f.CODIGO_COMPANIA = 2
      AND EXTRACT(YEAR FROM f.FECHA_TRANSACCION) = EXTRACT(YEAR FROM DATE_SUB(DATE_TRUNC(CURRENT_DATE(), MONTH), INTERVAL 12 MONTH))
    GROUP BY 
        f.TIPO_DOCUMENTO_TOMADOR, 
        f.NUMERO_DOCUMENTO_TOMADOR
), 

regla_1 AS(
    SELECT 
        c.TIPO_DOCUMENTO,
        c.KEY_ID,
        COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Bajo') AS NIVEL_DE_RIESGO_ASIGNADO,
        CASE
            WHEN COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Bajo') = 'Alto' THEN '4'
            ELSE 'No Segmentado'
        END AS segmento
FROM `sb-ecosistemaanalitico-lago.seguros_bolivar.t_clientes_naturales` c
LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_score_clientes` sc
    ON c.TIPO_DOCUMENTO = sc.TIPO_DOCUMENTO AND c.KEY_ID = sc.KEY_ID
LEFT JOIN transacciones_valor t_valor
    ON c.TIPO_DOCUMENTO = t_valor.TIPO_DOCUMENTO_TOMADOR AND c.KEY_ID = t_valor.NUMERO_DOCUMENTO_TOMADOR
LEFT JOIN transacciones_cantidad t_cantidad
    ON c.TIPO_DOCUMENTO = t_cantidad.TIPO_DOCUMENTO_TOMADOR AND c.KEY_ID = t_cantidad.NUMERO_DOCUMENTO_TOMADOR
LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_jurisdicciones_nivel_riesgo` jr
    ON c.CODIGO_CODAZZI_DIRECCION_1 = jr.C__DIGO_DANE_DEL_MUNICIPIO
), ------------ Resultado calcula sobre el siguiente número de valores 18.137.381 Todos como no segmentados debido a que no cruzara el códiggo codazzi y el codigo DANE 

regla_2 AS(
    SELECT 
        c.TIPO_DOCUMENTO,
        c.KEY_ID,
        COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Bajo') AS NIVEL_DE_RIESGO_ASIGNADO,
        CASE
            WHEN COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Bajo') = 'Bajo' THEN
              CASE
                WHEN COALESCE(t_cantidad.cantidad_transacciones, 0) <= 110 THEN
                  CASE
                    WHEN COALESCE(t_valor.total_transacciones, 0) <= 4530530 THEN '11'
                    ELSE '11' 
                  END
                WHEN COALESCE(t_cantidad.cantidad_transacciones, 0) > 110 AND COALESCE(t_cantidad.cantidad_transacciones, 0) <= 187 THEN
                  CASE
                    WHEN COALESCE(t_valor.total_transacciones, 0) <= 7387106 THEN '11'
                    WHEN COALESCE(t_valor.total_transacciones, 0) > 7387106 THEN '11'
                    WHEN COALESCE(t_valor.total_transacciones, 0) > 14700383 THEN '8'
                    ELSE NULL 
                  END
                WHEN COALESCE(t_cantidad.cantidad_transacciones, 0) > 187 AND COALESCE(t_cantidad.cantidad_transacciones, 0) <= 426 THEN
                  CASE
                    WHEN COALESCE(t_valor.total_transacciones, 0) <= 30438032 THEN '8'
                    ELSE '8' 
                  END
                WHEN COALESCE(t_cantidad.cantidad_transacciones, 0) > 426 AND COALESCE(t_cantidad.cantidad_transacciones, 0) <= 1859 THEN
                  CASE
                    WHEN COALESCE(t_valor.total_transacciones, 0) <= 30438032 THEN '8'
                    ELSE '15' 
                  END
                WHEN COALESCE(t_cantidad.cantidad_transacciones, 0) > 1859 THEN '13'
                ELSE 'No Segmentado'
              END
        END AS segmento
FROM `sb-ecosistemaanalitico-lago.seguros_bolivar.t_clientes_naturales` c
LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_score_clientes` sc
    ON c.TIPO_DOCUMENTO = sc.TIPO_DOCUMENTO AND c.KEY_ID = sc.KEY_ID
LEFT JOIN transacciones_valor t_valor
    ON c.TIPO_DOCUMENTO = t_valor.TIPO_DOCUMENTO_TOMADOR AND c.KEY_ID = t_valor.NUMERO_DOCUMENTO_TOMADOR
LEFT JOIN transacciones_cantidad t_cantidad
    ON c.TIPO_DOCUMENTO = t_cantidad.TIPO_DOCUMENTO_TOMADOR AND c.KEY_ID = t_cantidad.NUMERO_DOCUMENTO_TOMADOR
LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_jurisdicciones_nivel_riesgo` jr
    ON c.CODIGO_CODAZZI_DIRECCION_1 = jr.C__DIGO_DANE_DEL_MUNICIPIO
),

regla_3 AS(
    SELECT 
        c.TIPO_DOCUMENTO,
        c.KEY_ID,
        COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Bajo') AS NIVEL_DE_RIESGO_ASIGNADO,
        CASE
            WHEN COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Bajo') = 'Medio' THEN 
              CASE
                WHEN COALESCE(t_cantidad.cantidad_transacciones, 0) <= 0 THEN '5'
                ELSE '5'
              END
        END AS segmento
FROM `sb-ecosistemaanalitico-lago.seguros_bolivar.t_clientes_naturales` c
LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_score_clientes` sc
    ON c.TIPO_DOCUMENTO = sc.TIPO_DOCUMENTO AND c.KEY_ID = sc.KEY_ID
LEFT JOIN transacciones_valor t_valor
    ON c.TIPO_DOCUMENTO = t_valor.TIPO_DOCUMENTO_TOMADOR AND c.KEY_ID = t_valor.NUMERO_DOCUMENTO_TOMADOR
LEFT JOIN transacciones_cantidad t_cantidad
    ON c.TIPO_DOCUMENTO = t_cantidad.TIPO_DOCUMENTO_TOMADOR AND c.KEY_ID = t_cantidad.NUMERO_DOCUMENTO_TOMADOR
LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_jurisdicciones_nivel_riesgo` jr
    ON c.CODIGO_CODAZZI_DIRECCION_1 = jr.C__DIGO_DANE_DEL_MUNICIPIO
)

SELECT DISTINCT TIPO_DOCUMENTO, KEY_ID, segmento
FROM (
SELECT * FROM regla_1
UNION ALL
SELECT * FROM regla_2
UNION ALL
SELECT * FROM regla_3
)AS reglas) 

------------------------- Creación de la tabla con asignación de los segmentos --------------------------

