CREATE OR REPLACE TABLE `sb-sandbox-usuarios.sandbox_cumplimiento.t_prueba_SB_Jurisdiccion` AS 

(WITH 
transacciones_valor AS (
    SELECT  DISTINCT
        f.TIPO_DOCUMENTO_TOMADOR, 
        f.NUMERO_DOCUMENTO_TOMADOR, 
        SUM(f.VALOR_TRANSACCION) AS total_transacciones
    FROM `sb-sandbox-usuarios.sandbox_cumplimiento.t_score_clientes` as t
    JOIN (
        SELECT DISTINCT
            CAST(TIPO_DOCUMENTO_TOMADOR AS STRING) AS TIPO_DOCUMENTO_TOMADOR, 
            CAST(NUMERO_DOCUMENTO_TOMADOR AS STRING) AS NUMERO_DOCUMENTO_TOMADOR,
            SUM(VALOR_RECAUDO_TOTAL_MES) AS VALOR_TRANSACCION, 
            CODIGO_COMPANIA, 
            FECHA_RECAUDO AS FECHA_TRANSACCION
        FROM `sb-ecosistemaanalitico-lago.datamart.t_produccion_recaudo_diario`
        GROUP BY 
            CAST(TIPO_DOCUMENTO_TOMADOR AS STRING), 
            CAST(NUMERO_DOCUMENTO_TOMADOR AS STRING),
            CODIGO_COMPANIA,
            FECHA_RECAUDO
        UNION ALL
        SELECT DISTINCT
            CAST(TIPO_DOCUMENTO_TOMADOR AS STRING) AS TIPO_DOCUMENTO_TOMADOR, 
            CAST(KEY_ID_TOMADOR AS STRING) AS NUMERO_DOCUMENTO_TOMADOR, 
            SUM(CAST(LIQUIDADO_BOLIVAR AS int64)) AS VALOR_TRANSACCION,
            CODIGO_COMPANIA, 
            FECHA_ORDEN_PAGO AS FECHA_TRANSACCION
        FROM `sb-ecosistemaanalitico-lago.seguros_bolivar.t_siniestros`
        GROUP BY 
            CAST(TIPO_DOCUMENTO_TOMADOR AS STRING), 
            CAST(KEY_ID_TOMADOR AS STRING),
            CODIGO_COMPANIA,
            FECHA_ORDEN_PAGO
    ) AS f
    ON f.TIPO_DOCUMENTO_TOMADOR = t.TIPO_DOCUMENTO
    AND f.NUMERO_DOCUMENTO_TOMADOR = t.KEY_ID
    WHERE f.CODIGO_COMPANIA = 2
      AND EXTRACT(YEAR FROM f.FECHA_TRANSACCION) = EXTRACT(YEAR FROM DATE_SUB(DATE_TRUNC(CURRENT_DATE(), MONTH), INTERVAL 12 MONTH))
    GROUP BY 
        f.TIPO_DOCUMENTO_TOMADOR, 
        f.NUMERO_DOCUMENTO_TOMADOR
),
transacciones_cantidad AS (
    SELECT DISTINCT
        f.TIPO_DOCUMENTO_TOMADOR, 
        f.NUMERO_DOCUMENTO_TOMADOR, 
        COUNT(f.VALOR_TRANSACCION) AS cantidad_transacciones
    FROM `sb-sandbox-usuarios.sandbox_cumplimiento.t_score_clientes` as t
    JOIN (
        SELECT DISTINCT
            CAST(TIPO_DOCUMENTO_TOMADOR AS STRING) AS TIPO_DOCUMENTO_TOMADOR, 
            CAST(NUMERO_DOCUMENTO_TOMADOR AS STRING) AS NUMERO_DOCUMENTO_TOMADOR,
            VALOR_RECAUDO_TOTAL_MES AS VALOR_TRANSACCION, 
            CODIGO_COMPANIA, 
            FECHA_RECAUDO AS FECHA_TRANSACCION
        FROM `sb-ecosistemaanalitico-lago.datamart.t_produccion_recaudo_diario`
        UNION ALL
        SELECT DISTINCT
            CAST(TIPO_DOCUMENTO_TOMADOR AS STRING) AS TIPO_DOCUMENTO_TOMADOR, 
            CAST(KEY_ID_TOMADOR AS STRING) AS NUMERO_DOCUMENTO_TOMADOR, 
            CAST(LIQUIDADO_BOLIVAR AS int64) AS VALOR_TRANSACCION,
            CODIGO_COMPANIA, 
            FECHA_ORDEN_PAGO AS FECHA_TRANSACCION
        FROM `sb-ecosistemaanalitico-lago.seguros_bolivar.t_siniestros`
    ) AS f
    ON f.TIPO_DOCUMENTO_TOMADOR = t.TIPO_DOCUMENTO
    AND f.NUMERO_DOCUMENTO_TOMADOR = t.KEY_ID
    WHERE f.CODIGO_COMPANIA = 2
      AND EXTRACT(YEAR FROM f.FECHA_TRANSACCION) = EXTRACT(YEAR FROM DATE_SUB(DATE_TRUNC(CURRENT_DATE(), MONTH), INTERVAL 12 MONTH))
    GROUP BY 
        f.TIPO_DOCUMENTO_TOMADOR, 
        f.NUMERO_DOCUMENTO_TOMADOR
), 

pagos_siniestros_valor AS (
    SELECT DISTINCT
        CAST(TIPO_DOCUMENTO_TOMADOR AS STRING) AS TIPO_DOCUMENTO_TOMADOR, 
        CAST(KEY_ID_TOMADOR AS STRING) AS NUMERO_DOCUMENTO_TOMADOR, 
        SUM(CAST(LIQUIDADO_BOLIVAR AS int64)) AS pagos_siniestros_valor
    FROM `sb-ecosistemaanalitico-lago.seguros_bolivar.t_siniestros`
    WHERE CODIGO_COMPANIA = 2
      AND EXTRACT(YEAR FROM FECHA_ORDEN_PAGO) = EXTRACT(YEAR FROM DATE_SUB(DATE_TRUNC(CURRENT_DATE(), MONTH), INTERVAL 12 MONTH))
    GROUP BY 
        CAST(TIPO_DOCUMENTO_TOMADOR AS STRING), 
        CAST(KEY_ID_TOMADOR AS STRING)
),

clientes_union AS (
    SELECT TIPO_DOCUMENTO, KEY_ID, CODIGO_CODAZZI_DIRECCION_1 FROM `sb-ecosistemaanalitico-lago.seguros_bolivar.t_clientes_naturales`
    UNION ALL
    SELECT TIPO_DOCUMENTO, KEY_ID, CODIGO_CODAZZI_DIRECCION_1 FROM `sb-ecosistemaanalitico-lago.seguros_bolivar.t_clientes_juridicos`
),

regla_1 AS(
    SELECT 
        c.TIPO_DOCUMENTO,
        c.KEY_ID,
        COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Bajo') AS NIVEL_DE_RIESGO_ASIGNADO,
        CASE
            WHEN COALESCE(p_siniestros.pagos_siniestros_valor, 0) > 0 THEN
              CASE
               WHEN COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Bajo') = 'Bajo' THEN '14 - 1.1'
               ELSE 'No Segmentado'
              END
            ELSE 'No Segmentado'
        END AS segmento
FROM clientes_union c
LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_score_clientes` sc
    ON c.TIPO_DOCUMENTO = sc.TIPO_DOCUMENTO AND c.KEY_ID = sc.KEY_ID
LEFT JOIN transacciones_valor t_valor
    ON c.TIPO_DOCUMENTO = t_valor.TIPO_DOCUMENTO_TOMADOR AND c.KEY_ID = t_valor.NUMERO_DOCUMENTO_TOMADOR
LEFT JOIN transacciones_cantidad t_cantidad
    ON c.TIPO_DOCUMENTO = t_cantidad.TIPO_DOCUMENTO_TOMADOR AND c.KEY_ID = t_cantidad.NUMERO_DOCUMENTO_TOMADOR
LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_jurisdicciones_nivel_riesgo` jr
    ON c.CODIGO_CODAZZI_DIRECCION_1 = jr.C__DIGO_DANE_DEL_MUNICIPIO
LEFT JOIN pagos_siniestros_valor p_siniestros
    ON c.TIPO_DOCUMENTO = p_siniestros.TIPO_DOCUMENTO_TOMADOR 
    AND c.KEY_ID = p_siniestros.NUMERO_DOCUMENTO_TOMADOR
),

regla_2 AS(
    SELECT 
        c.TIPO_DOCUMENTO,
        c.KEY_ID,
        COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Bajo') AS NIVEL_DE_RIESGO_ASIGNADO,
        CASE
            WHEN COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Alto') = 'Bajo' THEN '4 - 2.1'
            ELSE 'No Segmentado'
        END AS segmento
FROM clientes_union c
LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_score_clientes` sc
    ON c.TIPO_DOCUMENTO = sc.TIPO_DOCUMENTO AND c.KEY_ID = sc.KEY_ID
LEFT JOIN transacciones_valor t_valor
    ON c.TIPO_DOCUMENTO = t_valor.TIPO_DOCUMENTO_TOMADOR AND c.KEY_ID = t_valor.NUMERO_DOCUMENTO_TOMADOR
LEFT JOIN transacciones_cantidad t_cantidad
    ON c.TIPO_DOCUMENTO = t_cantidad.TIPO_DOCUMENTO_TOMADOR AND c.KEY_ID = t_cantidad.NUMERO_DOCUMENTO_TOMADOR
LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_jurisdicciones_nivel_riesgo` jr
    ON c.CODIGO_CODAZZI_DIRECCION_1 = jr.C__DIGO_DANE_DEL_MUNICIPIO
LEFT JOIN pagos_siniestros_valor p_siniestros
    ON c.TIPO_DOCUMENTO = p_siniestros.TIPO_DOCUMENTO_TOMADOR 
    AND c.KEY_ID = p_siniestros.NUMERO_DOCUMENTO_TOMADOR
),

regla_3 AS(
    SELECT 
        c.TIPO_DOCUMENTO,
        c.KEY_ID,
        COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Bajo') AS NIVEL_DE_RIESGO_ASIGNADO,
        CASE
            WHEN COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Alto') = 'Bajo' THEN
              CASE
                WHEN COALESCE(t_cantidad.cantidad_transacciones, 0) <= 107 THEN '11 - 3.1'
                WHEN COALESCE(t_cantidad.cantidad_transacciones, 0) > 107 AND COALESCE(t_cantidad.cantidad_transacciones, 0) <= 177 THEN
                  CASE
                    WHEN COALESCE(t_valor.total_transacciones, 0) <= 7005790 THEN '11 - 3.2'
                    WHEN COALESCE(t_valor.total_transacciones, 0) > 7005790 AND COALESCE(t_valor.total_transacciones, 0) <= 14169399 THEN '11 - 3.3' 
                    WHEN COALESCE(t_valor.total_transacciones, 0) > 14169399 THEN '8 - 3.4'
                  END
                WHEN COALESCE(t_cantidad.cantidad_transacciones, 0) > 177 AND COALESCE(t_cantidad.cantidad_transacciones, 0) <= 401 THEN '8 - 3.5'
                WHEN COALESCE(t_cantidad.cantidad_transacciones, 0) > 401 AND COALESCE(t_cantidad.cantidad_transacciones, 0) <= 1802 THEN
                  CASE
                    WHEN COALESCE(t_valor.total_transacciones, 0) <= 27706004 THEN '8 - 3.6'
                    WHEN COALESCE(t_valor.total_transacciones, 0) > 27706004 THEN '15 - 3.7'
                  END
                WHEN COALESCE(t_cantidad.cantidad_transacciones, 0) > 1802 THEN '13 - 3.8'
                ELSE 'No Segmentado'
              END
        END AS segmento
FROM clientes_union c
LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_score_clientes` sc
    ON c.TIPO_DOCUMENTO = sc.TIPO_DOCUMENTO AND c.KEY_ID = sc.KEY_ID
LEFT JOIN transacciones_valor t_valor
    ON c.TIPO_DOCUMENTO = t_valor.TIPO_DOCUMENTO_TOMADOR AND c.KEY_ID = t_valor.NUMERO_DOCUMENTO_TOMADOR
LEFT JOIN transacciones_cantidad t_cantidad
    ON c.TIPO_DOCUMENTO = t_cantidad.TIPO_DOCUMENTO_TOMADOR AND c.KEY_ID = t_cantidad.NUMERO_DOCUMENTO_TOMADOR
LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_jurisdicciones_nivel_riesgo` jr
    ON c.CODIGO_CODAZZI_DIRECCION_1 = jr.C__DIGO_DANE_DEL_MUNICIPIO
LEFT JOIN pagos_siniestros_valor p_siniestros
    ON c.TIPO_DOCUMENTO = p_siniestros.TIPO_DOCUMENTO_TOMADOR 
    AND c.KEY_ID = p_siniestros.NUMERO_DOCUMENTO_TOMADOR
),

regla_4 AS(
    SELECT 
        c.TIPO_DOCUMENTO,
        c.KEY_ID,
        COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Bajo') AS NIVEL_DE_RIESGO_ASIGNADO,
        CASE
            WHEN COALESCE(jr.NIVEL_DE_RIESGO_ASIGNADO, 'Alto') = 'Medio' THEN '5 - 3.9'
            ELSE 'No Segmentado'
        END AS segmento
FROM clientes_union c
LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_score_clientes` sc
    ON c.TIPO_DOCUMENTO = sc.TIPO_DOCUMENTO AND c.KEY_ID = sc.KEY_ID
LEFT JOIN transacciones_valor t_valor
    ON c.TIPO_DOCUMENTO = t_valor.TIPO_DOCUMENTO_TOMADOR AND c.KEY_ID = t_valor.NUMERO_DOCUMENTO_TOMADOR
LEFT JOIN transacciones_cantidad t_cantidad
    ON c.TIPO_DOCUMENTO = t_cantidad.TIPO_DOCUMENTO_TOMADOR AND c.KEY_ID = t_cantidad.NUMERO_DOCUMENTO_TOMADOR
LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_jurisdicciones_nivel_riesgo` jr
    ON c.CODIGO_CODAZZI_DIRECCION_1 = jr.C__DIGO_DANE_DEL_MUNICIPIO
LEFT JOIN pagos_siniestros_valor p_siniestros
    ON c.TIPO_DOCUMENTO = p_siniestros.TIPO_DOCUMENTO_TOMADOR 
    AND c.KEY_ID = p_siniestros.NUMERO_DOCUMENTO_TOMADOR
)

SELECT DISTINCT TIPO_DOCUMENTO, KEY_ID, segmento
FROM (
SELECT * FROM regla_1
UNION ALL
SELECT * FROM regla_2
UNION ALL
SELECT * FROM regla_3
UNION ALL
SELECT * FROM regla_4
)AS reglas
INNER JOIN 
    `sb-ecosistemaanalitico-lago.seguros_bolivar.t_polizas` pol
ON 
    reglas.TIPO_DOCUMENTO = pol.TIPO_DOCUMENTO_TOMADOR
    AND reglas.KEY_ID = pol.KEY_ID_TOMADOR
WHERE date(pol.FECHA_FIN_POLIZA) >= current_Date()
AND CODIGO_COMPANIA = 2) 

----------------------------- Código para asignar segmentos por reglas

SELECT segmento, COUNT(*) AS total_clientes
FROM `sb-sandbox-usuarios.sandbox_cumplimiento.t_prueba_SB_Jurisdiccion`
GROUP BY segmento
ORDER BY total_clientes DESC;

---------------------------------------------------------------

CREATE OR REPLACE TABLE `sb-sandbox-usuarios.sandbox_cumplimiento.t_prueba_SB_Jurisdiccion_full` AS 

WITH datos AS (
    SELECT 
        *,  
        CASE 
            WHEN segmento IS NULL OR segmento = 'No Segmentado' THEN 'No Segmentado'
            ELSE SPLIT(segmento, ' - ')[SAFE_OFFSET(0)]
        END AS SEGMENTO_1,
        CASE 
            WHEN segmento IS NULL OR segmento = 'No Segmentado' THEN 100
            ELSE CAST(SPLIT(segmento, ' - ')[SAFE_OFFSET(1)] AS FLOAT64)
        END AS NIVEL_DE_PRIORIDAD
    FROM `sb-sandbox-usuarios.sandbox_cumplimiento.t_prueba_SB_Jurisdiccion`
),
ordenado AS (
    SELECT *,
           ROW_NUMBER() OVER (PARTITION BY KEY_ID ORDER BY NIVEL_DE_PRIORIDAD ASC) AS fila
    FROM datos
)
SELECT *
FROM ordenado
WHERE fila = 1;

-------------------------------- Código para asignar segmento definitivo con base en arbol de decisión

SELECT SEGMENTO_1, COUNT(*) AS total_clientes
FROM `sb-sandbox-usuarios.sandbox_cumplimiento.t_prueba_SB_Jurisdiccion_full`
GROUP BY SEGMENTO_1
ORDER BY total_clientes DESC;
