WITH 
Riesgo_LAFT AS (
  SELECT DISTINCT TIPO_DOCUMENTO, KEY_ID
  FROM sb-sandbox-usuarios.sandbox_cumplimiento.t_score_clientes AS a
  WHERE NIVEL_DE_RIESGO = 'Riesgo Bajo' and CODIGO_ENTIDAD_COMPANIA = 2
), --- Validado ok 


ActivoPasivo AS (
  SELECT DISTINCT TIPO_DOCUMENTO, KEY_ID
  FROM `sb-ecosistemaanalitico-lago.seguros_bolivar.t_clientes_naturales` AS d
  WHERE SAFE_DIVIDE(VALOR_ACTIVO, VALOR_PASIVO) <= 34.8
), --- Validado ok 

IngresosEgresos AS (
  SELECT DISTINCT TIPO_DOCUMENTO, KEY_ID
  FROM `sb-ecosistemaanalitico-lago.seguros_bolivar.t_clientes_naturales` AS e
  WHERE SAFE_DIVIDE(VALOR_INGRESOS, VALOR_EGRESOS) <= 13.0
), --- Validado ok

TransaccionesPago_valor AS (
    SELECT DISTINCT
        t.TIPO_DOCUMENTO, t.KEY_ID
    FROM `sb-ecosistemaanalitico-lago.datamart.t_produccion_recaudo_diario` AS f
    JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_terceros_clientes` AS t
        ON f.TIPO_DOCUMENTO_TOMADOR = t.TIPO_DOCUMENTO
        AND f.NUMERO_DOCUMENTO_TOMADOR = t.NUMERO_DOCUMENTO
    WHERE f.CODIGO_COMPANIA = 2
      AND f.VALOR_RECAUDO_TOTAL_MES <= 125984610
      AND EXTRACT(YEAR FROM f.FECHA_RECAUDO) = EXTRACT(YEAR FROM DATE_SUB(CURRENT_DATE(), INTERVAL 12 MONTH)) --Revisar periodo evaluado
      AND EXTRACT(MONTH FROM f.FECHA_RECAUDO) = EXTRACT(MONTH FROM DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH))

),   --- Validado ok

TransaccionesPago_cantidad AS (
SELECT DISTINCT
        t.TIPO_DOCUMENTO, t.KEY_ID,
        COUNT(*) AS REGISTROS_MES_ANTERIOR
    FROM `sb-ecosistemaanalitico-lago.datamart.t_produccion_recaudo_diario` AS l
    JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_terceros_clientes` AS t
        ON l.TIPO_DOCUMENTO_TOMADOR = t.TIPO_DOCUMENTO
        AND l.NUMERO_DOCUMENTO_TOMADOR = t.NUMERO_DOCUMENTO
    WHERE l.CODIGO_COMPANIA = 2
      AND EXTRACT(YEAR FROM l.FECHA_RECAUDO) = EXTRACT(YEAR FROM DATE_SUB(CURRENT_DATE(), INTERVAL 12 MONTH)) --Revisar periodo evaluado
      AND EXTRACT(MONTH FROM l.FECHA_RECAUDO) = EXTRACT(MONTH FROM DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH))
GROUP BY t.TIPO_DOCUMENTO, t.KEY_ID
HAVING REGISTROS_MES_ANTERIOR BETWEEN 1 AND 5
),  --- Validado ok

TransaccionesSiniestro_valor AS (
  SELECT DISTINCT TIPO_DOCUMENTO_TOMADOR, KEY_ID_TOMADOR
  FROM `sb-ecosistemaanalitico-lago.seguros_bolivar.t_siniestros` AS g
  WHERE CODIGO_COMPANIA = 2
    AND LIQUIDADO_BOLIVAR BETWEEN -245938589 AND 316673675
    AND EXTRACT(YEAR FROM FECHA_ORDEN_PAGO) = EXTRACT(YEAR FROM DATE_SUB(CURRENT_DATE(), INTERVAL 12 MONTH))
    AND EXTRACT(MONTH FROM FECHA_ORDEN_PAGO) = EXTRACT(MONTH FROM DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH)) --Revisar periodo evaluado
), --- Validado ok

TransaccionesSiniestro_cantidad AS (
SELECT DISTINCT TIPO_DOCUMENTO_TOMADOR, 
                KEY_ID_TOMADOR,
                COUNT(*) AS REGISTROS_MES_ANTERIOR
  FROM `sb-ecosistemaanalitico-lago.seguros_bolivar.t_siniestros` AS z
  WHERE CODIGO_COMPANIA = 2
    AND EXTRACT(YEAR FROM FECHA_ORDEN_PAGO) = EXTRACT(YEAR FROM DATE_SUB(CURRENT_DATE(), INTERVAL 12 MONTH))
    AND EXTRACT(MONTH FROM FECHA_ORDEN_PAGO) = EXTRACT(MONTH FROM DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH)) --Revisar periodo evaluado
GROUP BY TIPO_DOCUMENTO_TOMADOR, KEY_ID_TOMADOR
HAVING REGISTROS_MES_ANTERIOR BETWEEN 1 AND 5
), --- Validado ok

PolizasVigentes AS (
  SELECT DISTINCT  TIPO_DOCUMENTO_TOMADOR, KEY_ID_TOMADOR
  FROM `sb-ecosistemaanalitico-lago.seguros_bolivar.t_polizas` AS h
    WHERE date(FECHA_FIN_POLIZA) >= CURRENT_DATE()
    AND CODIGO_COMPANIA = 2 --- unir la base de cancelaciones
),

ocupacion AS (
SELECT DISTINCT 
  TIPO_DOCUMENTO, 
  KEY_ID,
  CASE
      WHEN REGEXP_CONTAINS(UPPER(CARGO), r'(AMA DE)') THEN 'AMA DE CASA'
      WHEN REGEXP_CONTAINS(UPPER(CARGO), r'(PENSIO)') THEN 'PENSIONADO'
      WHEN REGEXP_CONTAINS(UPPER(CARGO), r'(ESTUDIANTE)') THEN 'ESTUDIANTE'
      WHEN REGEXP_CONTAINS(UPPER(CARGO), r'(DOCTOR|DOCTORA|ENFERMERO|ENFERMERA|SALUD)') THEN 'ASALARIADO'
      WHEN REGEXP_CONTAINS(UPPER(CARGO), r'(INGENIERO|INGENIERA|ARQUITECTO)') THEN 'ASALARIADO'
      WHEN REGEXP_CONTAINS(UPPER(CARGO), r'(TECNICO|AUXILIAR|TÉCNICO)') THEN 'ASALARIADO'      
      WHEN REGEXP_CONTAINS(UPPER(CARGO), r'(PSICOLOGO|PSICOLOGA|TRABAJO SOCIAL|TRABAJADORA SOCIAL)') THEN 'ASALARIADO'
      WHEN REGEXP_CONTAINS(UPPER(CARGO), r'(ARTISTA|MÚSICO|DISEÑADOR|PINTOR)') THEN 'ASALARIADO'
      WHEN REGEXP_CONTAINS(UPPER(CARGO), r'(AGRONOMO|AGRONOMA|VETERINARIO|VETERINARIA)') THEN 'ASALARIADO'
      WHEN REGEXP_CONTAINS(UPPER(CARGO), r'(ABOGADO|ABOGADA|CONTADOR|CONTADORA|LEGAL)') THEN 'ASALARIADO'
      WHEN REGEXP_CONTAINS(UPPER(CARGO), r'(OTROS)') THEN 'NO APLIC'
      WHEN REGEXP_CONTAINS(UPPER(CARGO), r'(ADMINISTRADOR|ADMINISTRADORA|GERENTE|COORDINADOR)') THEN 'ASALARIADO'
      WHEN REGEXP_CONTAINS(UPPER(CARGO), r'(PROFESOR|MAESTRO|EDUCADOR|DOCENTE|TUTOR)') THEN 'ASALARIADO'
      WHEN REGEXP_CONTAINS(UPPER(CARGO), r'(CIENTÍFICO|CIENTIFICA|INVESTIGADOR|INVESTIGADORA)') THEN 'ASALARIADO'
      WHEN REGEXP_CONTAINS(UPPER(CARGO), r'(POLICÍA|MILITAR|SEGURIDAD|DEFENSA)') THEN 'ASALARIADO'
      WHEN REGEXP_CONTAINS(UPPER(CARGO), r'(BANCA)') THEN 'ASALARIADO'
      ELSE 'NO APLICA'
  END AS CATEGORIA
FROM `sb-ecosistemaanalitico-lago.seguros_bolivar.t_clientes_naturales` as c
WHERE (CARGO IN ('ASALARIADO') OR CARGO IS NULL OR CARGO = '')
),

Segmento1 AS (
  SELECT DISTINCT 
    a.KEY_ID AS KEY_TOMADOR, 
    a.TIPO_DOCUMENTO AS TIPO_TOMADOR,
    1 AS Segmento
  FROM Riesgo_LAFT AS a
  JOIN ActivoPasivo AS d ON a.KEY_ID = d.KEY_ID AND a.TIPO_DOCUMENTO = d.TIPO_DOCUMENTO
  JOIN IngresosEgresos AS e ON a.KEY_ID = e.KEY_ID AND a.TIPO_DOCUMENTO = e.TIPO_DOCUMENTO
  JOIN TransaccionesPago_valor AS f ON a.KEY_ID = f.KEY_ID AND a.TIPO_DOCUMENTO = f.TIPO_DOCUMENTO
  JOIN TransaccionesPago_cantidad AS l ON a.KEY_ID = l.KEY_ID AND a.TIPO_DOCUMENTO = l.TIPO_DOCUMENTO
  JOIN TransaccionesSiniestro_valor AS g ON a.KEY_ID = g.KEY_ID_TOMADOR AND a.TIPO_DOCUMENTO = g.TIPO_DOCUMENTO_TOMADOR
  JOIN TransaccionesSiniestro_cantidad AS z ON a.KEY_ID = z.KEY_ID_TOMADOR AND a.TIPO_DOCUMENTO = z.TIPO_DOCUMENTO_TOMADOR
  JOIN PolizasVigentes AS h ON a.KEY_ID = h.KEY_ID_TOMADOR AND a.TIPO_DOCUMENTO = h.TIPO_DOCUMENTO_TOMADOR
  JOIN Ocupacion AS c ON a.KEY_ID = c.KEY_ID AND a.TIPO_DOCUMENTO = c.TIPO_DOCUMENTO
)
SELECT * FROM Segmento1;
