CREATE OR REPLACE TABLE `sb-sandbox-usuarios.sandbox_cumplimiento.t_prueba_SCB_ClientesPJ` AS 

(WITH 
transacciones_valor AS (
    SELECT  DISTINCT
        f.TIPO_DOCUMENTO_TOMADOR, 
        f.NUMERO_DOCUMENTO_TOMADOR, 
        SUM(f.VALOR_TRANSACCION) AS total_transacciones
    FROM `sb-sandbox-usuarios.sandbox_cumplimiento.t_score_clientes` as t
    JOIN (
        SELECT DISTINCT
            CAST(TIPO_DOCUMENTO_TOMADOR AS STRING) AS TIPO_DOCUMENTO_TOMADOR, 
            CAST(NUMERO_DOCUMENTO_TOMADOR AS STRING) AS NUMERO_DOCUMENTO_TOMADOR,
            SUM(VALOR_RECAUDO_TOTAL_MES) AS VALOR_TRANSACCION, 
            CODIGO_COMPANIA, 
            FECHA_RECAUDO AS FECHA_TRANSACCION
        FROM `sb-ecosistemaanalitico-lago.datamart.t_produccion_recaudo_diario`
        GROUP BY 
            CAST(TIPO_DOCUMENTO_TOMADOR AS STRING), 
            CAST(NUMERO_DOCUMENTO_TOMADOR AS STRING),
            CODIGO_COMPANIA,
            FECHA_RECAUDO
        UNION ALL
        SELECT DISTINCT
            CAST(TIPO_DOCUMENTO_TOMADOR AS STRING) AS TIPO_DOCUMENTO_TOMADOR, 
            CAST(KEY_ID_TOMADOR AS STRING) AS NUMERO_DOCUMENTO_TOMADOR, 
            SUM(CAST(LIQUIDADO_BOLIVAR AS int64)) AS VALOR_TRANSACCION,
            CODIGO_COMPANIA, 
            FECHA_ORDEN_PAGO AS FECHA_TRANSACCION
        FROM `sb-ecosistemaanalitico-lago.seguros_bolivar.t_siniestros`
        GROUP BY 
            CAST(TIPO_DOCUMENTO_TOMADOR AS STRING), 
            CAST(KEY_ID_TOMADOR AS STRING),
            CODIGO_COMPANIA,
            FECHA_ORDEN_PAGO
    ) AS f
    ON f.TIPO_DOCUMENTO_TOMADOR = t.TIPO_DOCUMENTO
    AND f.NUMERO_DOCUMENTO_TOMADOR = t.KEY_ID
    WHERE f.CODIGO_COMPANIA = 3
      AND TIPO_DOCUMENTO_TOMADOR IN ('NT','NE','CR')      
      AND EXTRACT(YEAR FROM f.FECHA_TRANSACCION) = EXTRACT(YEAR FROM DATE_SUB(DATE_TRUNC(CURRENT_DATE(), MONTH), INTERVAL 12 MONTH))
    GROUP BY 
        f.TIPO_DOCUMENTO_TOMADOR, 
        f.NUMERO_DOCUMENTO_TOMADOR
),
transacciones_cantidad AS (
    SELECT DISTINCT
        f.TIPO_DOCUMENTO_TOMADOR, 
        f.NUMERO_DOCUMENTO_TOMADOR, 
        COUNT(f.VALOR_TRANSACCION) AS cantidad_transacciones
    FROM `sb-sandbox-usuarios.sandbox_cumplimiento.t_score_clientes` as t
    JOIN (
        SELECT DISTINCT
            CAST(TIPO_DOCUMENTO_TOMADOR AS STRING) AS TIPO_DOCUMENTO_TOMADOR, 
            CAST(NUMERO_DOCUMENTO_TOMADOR AS STRING) AS NUMERO_DOCUMENTO_TOMADOR,
            VALOR_RECAUDO_TOTAL_MES AS VALOR_TRANSACCION, 
            CODIGO_COMPANIA, 
            FECHA_RECAUDO AS FECHA_TRANSACCION
        FROM `sb-ecosistemaanalitico-lago.datamart.t_produccion_recaudo_diario`
        UNION ALL
        SELECT DISTINCT
            CAST(TIPO_DOCUMENTO_TOMADOR AS STRING) AS TIPO_DOCUMENTO_TOMADOR, 
            CAST(KEY_ID_TOMADOR AS STRING) AS NUMERO_DOCUMENTO_TOMADOR, 
            CAST(LIQUIDADO_BOLIVAR AS int64) AS VALOR_TRANSACCION,
            CODIGO_COMPANIA, 
            FECHA_ORDEN_PAGO AS FECHA_TRANSACCION
        FROM `sb-ecosistemaanalitico-lago.seguros_bolivar.t_siniestros`
    ) AS f
    ON f.TIPO_DOCUMENTO_TOMADOR = t.TIPO_DOCUMENTO
    AND f.NUMERO_DOCUMENTO_TOMADOR = t.KEY_ID
    WHERE f.CODIGO_COMPANIA = 3
      AND EXTRACT(YEAR FROM f.FECHA_TRANSACCION) = EXTRACT(YEAR FROM DATE_SUB(DATE_TRUNC(CURRENT_DATE(), MONTH), INTERVAL 12 MONTH))
    GROUP BY 
        f.TIPO_DOCUMENTO_TOMADOR, 
        f.NUMERO_DOCUMENTO_TOMADOR
), 

regla_1 AS(
    SELECT 
        c.TIPO_DOCUMENTO,
        c.KEY_ID,
        CASE
            WHEN sc.NIVEL_DE_RIESGO IN ('Riesgo Alto') AND sc.CODIGO_ENTIDAD_COMPANIA = 3 THEN
                CASE
                    WHEN NULLIF(c.VALOR_ACTIVO, 0) / NULLIF(c.VALOR_PASIVO, 0) <= 0 THEN '5 - 1.1'
                    WHEN NULLIF(c.VALOR_ACTIVO, 0) / NULLIF(c.VALOR_PASIVO, 0) > 0 AND NULLIF(c.VALOR_ACTIVO, 0) / NULLIF(c.VALOR_PASIVO, 0) <= 1.128 THEN '5 - 1.2'
                    WHEN NULLIF(c.VALOR_ACTIVO, 0) / NULLIF(c.VALOR_PASIVO, 0) > 1.128 AND NULLIF(c.VALOR_ACTIVO, 0) / NULLIF(c.VALOR_PASIVO, 0) <= 1.869 THEN
                      CASE
                        WHEN c.VALOR_INGRESOS / NULLIF(c.VALOR_EGRESOS, 0) <= 1.844 THEN
                          CASE
                            WHEN COALESCE(t_cantidad.cantidad_transacciones, 0) <= 10 THEN '5 - 1.3'
                            WHEN COALESCE(t_cantidad.cantidad_transacciones, 0) > 10 THEN '5 - 1.4'
                          END
                        WHEN c.VALOR_INGRESOS / NULLIF(c.VALOR_EGRESOS, 0) > 1.844 THEN '5 - 1.5'
                      END
                    WHEN NULLIF(c.VALOR_ACTIVO, 0) / NULLIF(c.VALOR_PASIVO, 0) > 1.869 AND NULLIF(c.VALOR_ACTIVO, 0) / NULLIF(c.VALOR_PASIVO, 0) <= 2.209 THEN '5 - 1.6'
                    WHEN NULLIF(c.VALOR_ACTIVO, 0) / NULLIF(c.VALOR_PASIVO, 0) > 2.209 AND NULLIF(c.VALOR_ACTIVO, 0) / NULLIF(c.VALOR_PASIVO, 0) <= 2.724 THEN
                      CASE
                        WHEN COALESCE(t_valor.total_transacciones, 0) <= 7847516 THEN
                          CASE
                            WHEN c.VALOR_INGRESOS / NULLIF(c.VALOR_EGRESOS, 0) <= 1.5 THEN '5 - 1.7'
                            WHEN c.VALOR_INGRESOS / NULLIF(c.VALOR_EGRESOS, 0) > 1.5 THEN '9 - 1.8'
                          END
                        WHEN COALESCE(t_valor.total_transacciones, 0) > 7847516 THEN '5 - 1.9'
                      END
                    WHEN NULLIF(c.VALOR_ACTIVO, 0) / NULLIF(c.VALOR_PASIVO, 0) > 2.724 AND NULLIF(c.VALOR_ACTIVO, 0) / NULLIF(c.VALOR_PASIVO, 0) <= 3.591 THEN
                      CASE
                        WHEN c.VALOR_INGRESOS / NULLIF(c.VALOR_EGRESOS, 0) <= 1.3 THEN '9 - 1.10'
                        WHEN c.VALOR_INGRESOS / NULLIF(c.VALOR_EGRESOS, 0) > 1.3 THEN '9 - 1.11'
                      END
                    WHEN NULLIF(c.VALOR_ACTIVO, 0) / NULLIF(c.VALOR_PASIVO, 0) > 3.591 AND NULLIF(c.VALOR_ACTIVO, 0) / NULLIF(c.VALOR_PASIVO, 0) <= 5.288 THEN '9 - 1.12'
                    WHEN NULLIF(c.VALOR_ACTIVO, 0) / NULLIF(c.VALOR_PASIVO, 0) > 5.288 THEN '7 - 1.13'
                END
            ELSE 'No Segmentado'
        END AS segmento
FROM `sb-ecosistemaanalitico-lago.seguros_bolivar.t_clientes_juridicos` c
LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_score_clientes` sc
    ON c.TIPO_DOCUMENTO = sc.TIPO_DOCUMENTO AND c.KEY_ID = sc.KEY_ID
LEFT JOIN transacciones_valor t_valor
    ON c.TIPO_DOCUMENTO = t_valor.TIPO_DOCUMENTO_TOMADOR AND c.KEY_ID = t_valor.NUMERO_DOCUMENTO_TOMADOR
LEFT JOIN transacciones_cantidad t_cantidad
    ON c.TIPO_DOCUMENTO = t_cantidad.TIPO_DOCUMENTO_TOMADOR AND c.KEY_ID = t_cantidad.NUMERO_DOCUMENTO_TOMADOR
),  ------------ Registros procesados 1.256.452----------

regla_2 AS(
    SELECT 
        c.TIPO_DOCUMENTO,
        c.KEY_ID,
        CASE
            WHEN sc.NIVEL_DE_RIESGO IN ('Riesgo Bajo') AND sc.CODIGO_ENTIDAD_COMPANIA = 3 THEN
                CASE
                    WHEN NULLIF(c.VALOR_ACTIVO, 0) / NULLIF(c.VALOR_PASIVO, 0) <= 1.869 THEN
                        CASE
                            WHEN c.VALOR_INGRESOS / NULLIF(c.VALOR_EGRESOS, 0) <= 1.844 THEN
                                CASE
                                    WHEN COALESCE(t_cantidad.cantidad_transacciones, 0) <= 0 THEN '3 - 2.1'
                                    WHEN COALESCE(t_cantidad.cantidad_transacciones, 0) > 0 THEN '3 - 2.2'
                                END
                            WHEN c.VALOR_INGRESOS / NULLIF(c.VALOR_EGRESOS, 0) > 1.844 AND c.VALOR_INGRESOS / NULLIF(c.VALOR_EGRESOS, 0) <= 2.5 THEN '3 - 2.3'
                            WHEN c.VALOR_INGRESOS / NULLIF(c.VALOR_EGRESOS, 0) > 2.5 THEN '2 - 2.4'
                        END
                    WHEN NULLIF(c.VALOR_ACTIVO, 0) / NULLIF(c.VALOR_PASIVO, 0) > 1.869 AND NULLIF(c.VALOR_ACTIVO, 0) / NULLIF(c.VALOR_PASIVO, 0) <= 2.209 THEN
                        CASE
                            WHEN COALESCE(t_cantidad.cantidad_transacciones, 0) <= 5 THEN '3 - 2.5'
                            WHEN COALESCE(t_cantidad.cantidad_transacciones, 0) > 5 THEN '3 - 2.6'   
                        END  
                    WHEN NULLIF(c.VALOR_ACTIVO, 0) / NULLIF(c.VALOR_PASIVO, 0) > 2.209 AND NULLIF(c.VALOR_ACTIVO, 0) / NULLIF(c.VALOR_PASIVO, 0) <= 2.724 THEN
                        CASE
                            WHEN c.VALOR_INGRESOS / NULLIF(c.VALOR_EGRESOS, 0) <= 1.3 THEN '3 - 2.7'
                            WHEN c.VALOR_INGRESOS / NULLIF(c.VALOR_EGRESOS, 0) > 1.3 AND c.VALOR_INGRESOS / NULLIF(c.VALOR_EGRESOS, 0) <= 1.844 THEN '3 - 2.8'
                            WHEN c.VALOR_INGRESOS / NULLIF(c.VALOR_EGRESOS, 0) > 1.844 THEN '2 - 2.9'
                        END
                    WHEN NULLIF(c.VALOR_ACTIVO, 0) / NULLIF(c.VALOR_PASIVO, 0) > 2.724 AND NULLIF(c.VALOR_ACTIVO, 0) / NULLIF(c.VALOR_PASIVO, 0) <= 3.591 THEN
                        CASE
                            WHEN c.VALOR_INGRESOS / NULLIF(c.VALOR_EGRESOS, 0) <= 1.184 THEN '4 - 2.10'
                            WHEN c.VALOR_INGRESOS / NULLIF(c.VALOR_EGRESOS, 0) > 1.844 THEN '4 - 2.11'
                        END
                    WHEN NULLIF(c.VALOR_ACTIVO, 0) / NULLIF(c.VALOR_PASIVO, 0) > 3.591 AND NULLIF(c.VALOR_ACTIVO, 0) / NULLIF(c.VALOR_PASIVO, 0) <= 5.288 THEN '4 - 2.12'
                    WHEN NULLIF(c.VALOR_ACTIVO, 0) / NULLIF(c.VALOR_PASIVO, 0) > 5.288 THEN
                        CASE
                            WHEN c.VALOR_INGRESOS / NULLIF(c.VALOR_EGRESOS, 0) <= 1.184 THEN '11 - 2.13'
                            WHEN c.VALOR_INGRESOS / NULLIF(c.VALOR_EGRESOS, 0) > 1.844 THEN '11 - 2.14'
                        END
                END
            ELSE 'No Segmentado'
        END AS segmento
FROM `sb-ecosistemaanalitico-lago.seguros_bolivar.t_clientes_juridicos` c
LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_score_clientes` sc
    ON c.TIPO_DOCUMENTO = sc.TIPO_DOCUMENTO AND c.KEY_ID = sc.KEY_ID
LEFT JOIN transacciones_valor t_valor
    ON c.TIPO_DOCUMENTO = t_valor.TIPO_DOCUMENTO_TOMADOR AND c.KEY_ID = t_valor.NUMERO_DOCUMENTO_TOMADOR
LEFT JOIN transacciones_cantidad t_cantidad
    ON c.TIPO_DOCUMENTO = t_cantidad.TIPO_DOCUMENTO_TOMADOR AND c.KEY_ID = t_cantidad.NUMERO_DOCUMENTO_TOMADOR
),

regla_3 AS(
    SELECT 
        c.TIPO_DOCUMENTO,
        c.KEY_ID,
        CASE
            WHEN sc.NIVEL_DE_RIESGO IN ('Riesgo Medio') AND sc.CODIGO_ENTIDAD_COMPANIA = 3 THEN
                CASE
                    WHEN c.VALOR_INGRESOS / NULLIF(c.VALOR_EGRESOS, 0) <= 0.631 THEN '1 - 3.1'
                    WHEN c.VALOR_INGRESOS / NULLIF(c.VALOR_EGRESOS, 0) > 0.631 AND c.VALOR_INGRESOS / NULLIF(c.VALOR_EGRESOS, 0) <= 2.5 THEN '1 - 3.2'
                    WHEN c.VALOR_INGRESOS / NULLIF(c.VALOR_EGRESOS, 0) > 2.5 THEN '2 - 3.3'
                END
            ELSE 'No Segmentado'
        END AS segmento
FROM `sb-ecosistemaanalitico-lago.seguros_bolivar.t_clientes_juridicos` c
LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_score_clientes` sc
    ON c.TIPO_DOCUMENTO = sc.TIPO_DOCUMENTO AND c.KEY_ID = sc.KEY_ID
LEFT JOIN transacciones_valor t_valor
    ON c.TIPO_DOCUMENTO = t_valor.TIPO_DOCUMENTO_TOMADOR AND c.KEY_ID = t_valor.NUMERO_DOCUMENTO_TOMADOR
LEFT JOIN transacciones_cantidad t_cantidad
    ON c.TIPO_DOCUMENTO = t_cantidad.TIPO_DOCUMENTO_TOMADOR AND c.KEY_ID = t_cantidad.NUMERO_DOCUMENTO_TOMADOR
)

SELECT DISTINCT TIPO_DOCUMENTO, KEY_ID, segmento
FROM (
SELECT * FROM regla_1
UNION ALL
SELECT * FROM regla_2
UNION ALL
SELECT * FROM regla_3
)AS reglas 
INNER JOIN 
    `sb-ecosistemaanalitico-lago.seguros_bolivar.t_polizas` pol
ON 
    reglas.TIPO_DOCUMENTO = pol.TIPO_DOCUMENTO_TOMADOR
    AND reglas.KEY_ID = pol.KEY_ID_TOMADOR
WHERE date(pol.FECHA_FIN_POLIZA) >= current_Date() 
AND TIPO_DOCUMENTO NOT in ('CC', 'PP', 'RC', 'CE', 'TI', 'PE', 'PT', 'CF', 'CD', 'RE', 'CI', 'SD')
AND CODIGO_COMPANIA = 3)

---------------------------------------- Código para asignar segmentos por reglas

SELECT segmento, COUNT(*) AS total_clientes
FROM `sb-sandbox-usuarios.sandbox_cumplimiento.t_prueba_SCB_ClientesPJ`
GROUP BY segmento
ORDER BY total_clientes DESC;

---------------------------------------------------------------

CREATE OR REPLACE TABLE `sb-sandbox-usuarios.sandbox_cumplimiento.t_prueba_SCB_ClientesPJ_full` AS 

WITH datos AS (
    SELECT 
        *,  
        CASE 
            WHEN segmento IS NULL OR segmento = 'No Segmentado' THEN 'No Segmentado'
            ELSE SPLIT(segmento, ' - ')[SAFE_OFFSET(0)]
        END AS SEGMENTO_1,
        CASE 
            WHEN segmento IS NULL OR segmento = 'No Segmentado' THEN 100
            ELSE CAST(SPLIT(segmento, ' - ')[SAFE_OFFSET(1)] AS FLOAT64)
        END AS NIVEL_DE_PRIORIDAD
    FROM `sb-sandbox-usuarios.sandbox_cumplimiento.t_prueba_SCB_ClientesPJ`
),
ordenado AS (
    SELECT *,
           ROW_NUMBER() OVER (PARTITION BY KEY_ID ORDER BY NIVEL_DE_PRIORIDAD ASC) AS fila
    FROM datos
)
SELECT *
FROM ordenado
WHERE fila = 1;

-------------------------------- Código para asignar segmento definitivo con base en arbol de decisión

SELECT SEGMENTO_1, COUNT(*) AS total_clientes
FROM `sb-sandbox-usuarios.sandbox_cumplimiento.t_prueba_SCB_ClientesPJ_full`
GROUP BY SEGMENTO_1
ORDER BY total_clientes DESC;

