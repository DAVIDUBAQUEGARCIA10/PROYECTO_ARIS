CREATE OR REPLACE TABLE sb-sandbox-usuarios.sandbox_cumplimiento.SEG_0104_VISOR_REPO AS
-- CTE 1: Identifica tomadores con ≥3 pólizas en el mismo ramo, con fechas de inicio en un rango ≤90 días
WITH PolizasPorRamo AS (
    SELECT 
        KEY_ID_TOMADOR,
        CODIGO_RAMO_EMISION,
        COUNT(DISTINCT NUMERO_POLIZA) AS cantidad_polizas,
        DATE_DIFF(
            MAX(CAST(FECHA_INICIO_ENDOSO AS DATE)), 
            MIN(CAST(FECHA_INICIO_ENDOSO AS DATE)), 
            DAY
        ) AS rango_dias
    FROM 
        sb-ecosistemaanalitico-lago.seguros_bolivar.t_polizas_riesgos_endosos
    WHERE 
        FECHA_PROCESO > '2024-01-01'
        AND FECHA_ORIGEN > '2024-01-01'
        AND CAST(FECHA_FIN_POLIZA AS DATE) >= CURRENT_DATE
        AND MARCA_ANULACION != 'S'
    GROUP BY 
        KEY_ID_TOMADOR, CODIGO_RAMO_EMISION
    HAVING 
        cantidad_polizas >= 5 AND rango_dias <= 90
)

-- Consulta principal con join a tabla de riesgo y una fila por tomador-ramo con riesgo alto
SELECT 
    p.KEY_ID_TOMADOR,
    p.CODIGO_RAMO_EMISION,
    p.CODIGO_COMPANIA,
    p.NOMBRE_RAMO_EMISION,
    p.CODIGO_RAMO_CONTABLE,
    p.NOMBRE_RAMO_CONTABLE,
    p.CODIGO_PRODUCTO,
    p.NOMBRE_PRODUCTO,
    p.NOMBRE_CANAL,
    p.NUMERO_POLIZA,
    p.TIPO_DOCUMENTO_TOMADOR,
    p.KEY_ID_ASEGURADO,
    p.FECHA_EMISION_ENDOSO,
    p.FECHA_INICIO_ENDOSO,
    p.FECHA_FIN_ENDOSO,
    p.FECHA_INICIO_POLIZA,
    p.FECHA_FIN_POLIZA,
    p.COD_MOTIVO_CANCELACION_POLIZA,
    p.DES_MOTIVO_CANCELACION_POLIZA,
    r.NIVEL_DE_RIESGO,
    FORMAT_DATE('%Y-%m', CURRENT_DATE()) AS FECHA_ALERTA_MES,  -- Fecha mes actual (formato año-mes)
    CURRENT_DATE() AS FECHA_ALERTA  -- Fecha exacta del día de ejecución
FROM (
    SELECT 
        t.KEY_ID_TOMADOR,
        t.CODIGO_RAMO_EMISION,
        ANY_VALUE(p.CODIGO_COMPANIA) AS CODIGO_COMPANIA,
        ANY_VALUE(p.NOMBRE_RAMO_EMISION) AS NOMBRE_RAMO_EMISION,
        ANY_VALUE(p.CODIGO_RAMO_CONTABLE) AS CODIGO_RAMO_CONTABLE,
        ANY_VALUE(p.NOMBRE_RAMO_CONTABLE) AS NOMBRE_RAMO_CONTABLE,
        ANY_VALUE(p.CODIGO_PRODUCTO) AS CODIGO_PRODUCTO,
        ANY_VALUE(p.NOMBRE_PRODUCTO) AS NOMBRE_PRODUCTO,
        ANY_VALUE(p.NOMBRE_CANAL) AS NOMBRE_CANAL,
        ANY_VALUE(p.NUMERO_POLIZA) AS NUMERO_POLIZA,
        ANY_VALUE(p.TIPO_DOCUMENTO_TOMADOR) AS TIPO_DOCUMENTO_TOMADOR,
        ANY_VALUE(p.KEY_ID_ASEGURADO) AS KEY_ID_ASEGURADO,
        MIN(CAST(p.FECHA_EMISION_ENDOSO AS DATE)) AS FECHA_EMISION_ENDOSO,
        MIN(CAST(p.FECHA_INICIO_ENDOSO AS DATE)) AS FECHA_INICIO_ENDOSO,
        MAX(CAST(p.FECHA_FIN_ENDOSO AS DATE)) AS FECHA_FIN_ENDOSO,
        MIN(CAST(p.FECHA_INICIO_POLIZA AS DATE)) AS FECHA_INICIO_POLIZA,
        MAX(CAST(p.FECHA_FIN_POLIZA AS DATE)) AS FECHA_FIN_POLIZA,
        ANY_VALUE(p.COD_MOTIVO_CANCELACION_POLIZA) AS COD_MOTIVO_CANCELACION_POLIZA,
        ANY_VALUE(p.DES_MOTIVO_CANCELACION_POLIZA) AS DES_MOTIVO_CANCELACION_POLIZA
    FROM 
        PolizasPorRamo t
    JOIN 
        sb-ecosistemaanalitico-lago.seguros_bolivar.t_polizas_riesgos_endosos p
    ON 
        t.KEY_ID_TOMADOR = p.KEY_ID_TOMADOR 
        AND t.CODIGO_RAMO_EMISION = p.CODIGO_RAMO_EMISION
    WHERE 
        p.FECHA_PROCESO > '2024-01-01'
        AND p.FECHA_ORIGEN > '2024-01-01'
        AND CAST(p.FECHA_FIN_POLIZA AS DATE) >= CURRENT_DATE
        AND p.MARCA_ANULACION != 'S'
        AND p.CODIGO_COMPANIA = 2
        AND p.TIPO_DOCUMENTO_TOMADOR IN ('NT', 'NE')
        AND p.KEY_ID_TOMADOR != '860034313'
    GROUP BY 
        t.KEY_ID_TOMADOR, t.CODIGO_RAMO_EMISION
) p

-- LEFT JOIN a tabla de riesgo para filtrar solo productos de alto riesgo
LEFT JOIN (
    SELECT 
        SAFE_CAST(C__digo_del_Ramo AS INT64) AS CODIGO_RAMO_CONTABLE,
        SAFE_CAST(C__digo_de_Producto AS INT64) AS CODIGO_PRODUCTO,
        NIVEL_DE_RIESGO
    FROM 
        sb-sandbox-usuarios.sandbox_cumplimiento.t_productos_nivel_riesgo
    WHERE 
        NIVEL_DE_RIESGO = 'Alto'
) r
ON 
    p.CODIGO_RAMO_EMISION = r.CODIGO_RAMO_CONTABLE AND 
    p.CODIGO_PRODUCTO = r.CODIGO_PRODUCTO

-- Solo conservar los productos de nivel de riesgo alto
WHERE 
    r.NIVEL_DE_RIESGO = 'Alto';








INSERT --------------------

-- INSERTAR NUEVOS REGISTROS EN SEG_0104_VISOR_REPO CON FECHA DE ALERTA
INSERT INTO sb-sandbox-usuarios.sandbox_cumplimiento.SEG_0104_VISOR_REPO (
    KEY_ID_TOMADOR,
    CODIGO_RAMO_EMISION,
    CODIGO_COMPANIA,
    NOMBRE_RAMO_EMISION,
    CODIGO_RAMO_CONTABLE,
    NOMBRE_RAMO_CONTABLE,
    CODIGO_PRODUCTO,
    NOMBRE_PRODUCTO,
    NOMBRE_CANAL,
    NUMERO_POLIZA,
    TIPO_DOCUMENTO_TOMADOR,
    KEY_ID_ASEGURADO,
    FECHA_EMISION_ENDOSO,
    FECHA_INICIO_ENDOSO,
    FECHA_FIN_ENDOSO,
    FECHA_INICIO_POLIZA,
    FECHA_FIN_POLIZA,
    COD_MOTIVO_CANCELACION_POLIZA,
    DES_MOTIVO_CANCELACION_POLIZA,
    NIVEL_DE_RIESGO,
    FECHA_ALERTA_MES,
    FECHA_ALERTA
)

WITH PolizasPorRamo AS (
    SELECT 
        KEY_ID_TOMADOR,
        CODIGO_RAMO_EMISION,
        COUNT(DISTINCT NUMERO_POLIZA) AS cantidad_polizas,
        DATE_DIFF(
            MAX(CAST(FECHA_INICIO_ENDOSO AS DATE)), 
            MIN(CAST(FECHA_INICIO_ENDOSO AS DATE)), 
            DAY
        ) AS rango_dias
    FROM 
        sb-ecosistemaanalitico-lago.seguros_bolivar.t_polizas_riesgos_endosos
    WHERE 
        FECHA_PROCESO > '2024-01-01'
        AND FECHA_ORIGEN > '2024-01-01'
        AND CAST(FECHA_FIN_POLIZA AS DATE) >= CURRENT_DATE()
        AND MARCA_ANULACION != 'S'
    GROUP BY 
        KEY_ID_TOMADOR, CODIGO_RAMO_EMISION
    HAVING 
        cantidad_polizas >= 5 AND rango_dias <= 90
),

PolizasFiltradas AS (
    SELECT 
        t.KEY_ID_TOMADOR,
        t.CODIGO_RAMO_EMISION,
        ANY_VALUE(p.CODIGO_COMPANIA) AS CODIGO_COMPANIA,
        ANY_VALUE(p.NOMBRE_RAMO_EMISION) AS NOMBRE_RAMO_EMISION,
        ANY_VALUE(p.CODIGO_RAMO_CONTABLE) AS CODIGO_RAMO_CONTABLE,
        ANY_VALUE(p.NOMBRE_RAMO_CONTABLE) AS NOMBRE_RAMO_CONTABLE,
        ANY_VALUE(p.CODIGO_PRODUCTO) AS CODIGO_PRODUCTO,
        ANY_VALUE(p.NOMBRE_PRODUCTO) AS NOMBRE_PRODUCTO,
        ANY_VALUE(p.NOMBRE_CANAL) AS NOMBRE_CANAL,
        ANY_VALUE(p.NUMERO_POLIZA) AS NUMERO_POLIZA,
        ANY_VALUE(p.TIPO_DOCUMENTO_TOMADOR) AS TIPO_DOCUMENTO_TOMADOR,
        ANY_VALUE(p.KEY_ID_ASEGURADO) AS KEY_ID_ASEGURADO,
        MIN(CAST(p.FECHA_EMISION_ENDOSO AS DATE)) AS FECHA_EMISION_ENDOSO,
        MIN(CAST(p.FECHA_INICIO_ENDOSO AS DATE)) AS FECHA_INICIO_ENDOSO,
        MAX(CAST(p.FECHA_FIN_ENDOSO AS DATE)) AS FECHA_FIN_ENDOSO,
        MIN(CAST(p.FECHA_INICIO_POLIZA AS DATE)) AS FECHA_INICIO_POLIZA,
        MAX(CAST(p.FECHA_FIN_POLIZA AS DATE)) AS FECHA_FIN_POLIZA,
        ANY_VALUE(p.COD_MOTIVO_CANCELACION_POLIZA) AS COD_MOTIVO_CANCELACION_POLIZA,
        ANY_VALUE(p.DES_MOTIVO_CANCELACION_POLIZA) AS DES_MOTIVO_CANCELACION_POLIZA
    FROM 
        PolizasPorRamo t
    JOIN 
        sb-ecosistemaanalitico-lago.seguros_bolivar.t_polizas_riesgos_endosos p
        ON t.KEY_ID_TOMADOR = p.KEY_ID_TOMADOR 
        AND t.CODIGO_RAMO_EMISION = p.CODIGO_RAMO_EMISION
    WHERE 
        p.FECHA_PROCESO > '2024-01-01'
        AND p.FECHA_ORIGEN > '2024-01-01'
        AND CAST(p.FECHA_FIN_POLIZA AS DATE) >= CURRENT_DATE()
        AND p.MARCA_ANULACION != 'S'
        AND p.CODIGO_COMPANIA = 2
        AND p.TIPO_DOCUMENTO_TOMADOR IN ('NT', 'NE')
        AND p.KEY_ID_TOMADOR != '860034313'
    GROUP BY 
        t.KEY_ID_TOMADOR, t.CODIGO_RAMO_EMISION
),

ConRiesgoAlto AS (
    SELECT 
        pf.*,
        r.NIVEL_DE_RIESGO
    FROM 
        PolizasFiltradas pf
    LEFT JOIN (
        SELECT 
            SAFE_CAST(C__digo_del_Ramo AS INT64) AS CODIGO_RAMO_CONTABLE,
            SAFE_CAST(C__digo_de_Producto AS INT64) AS CODIGO_PRODUCTO,
            NIVEL_DE_RIESGO
        FROM sb-sandbox-usuarios.sandbox_cumplimiento.t_productos_nivel_riesgo
        WHERE NIVEL_DE_RIESGO = 'Alto'
    ) r
    ON pf.CODIGO_RAMO_CONTABLE = r.CODIGO_RAMO_CONTABLE
       AND pf.CODIGO_PRODUCTO = r.CODIGO_PRODUCTO
    WHERE r.NIVEL_DE_RIESGO = 'Alto'
)

SELECT 
    *,
    FORMAT_DATE('%Y-%m', CURRENT_DATE()) AS FECHA_ALERTA_MES,
    CURRENT_DATE() AS FECHA_ALERTA
FROM ConRiesgoAlto
WHERE NOT EXISTS (
    SELECT 1
    FROM sb-sandbox-usuarios.sandbox_cumplimiento.SEG_0103_VISOR_REPO t
    WHERE 
        t.KEY_ID_TOMADOR = ConRiesgoAlto.KEY_ID_TOMADOR
        AND t.CODIGO_RAMO_EMISION = ConRiesgoAlto.CODIGO_RAMO_EMISION
);


