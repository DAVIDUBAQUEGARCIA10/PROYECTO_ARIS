CREATE OR REPLACE TABLE sb-sandbox-usuarios.sandbox_cumplimiento.SEG_0105_VISOR_REPO AS
WITH resultado AS (
    SELECT 
        p.CODIGO_COMPANIA,
        p.NUMERO_POLIZA,
        p.TIPO_DOCUMENTO_TOMADOR,
        p.KEY_ID_TOMADOR,
        p.CODIGO_RAMO_EMISION,
        p.NOMBRE_RAMO_EMISION,
        p.CODIGO_PRODUCTO,
        p.NOMBRE_SUBPRODUCTO,
        c.CODIGO_CIIU,
        c.CODIGO_LUGAR_REGISTRO,
        c.NOMBRE_LUGAR_REGISTRO,
        c.CODIGO_CODAZZI_DIRECCION_1 AS Codazzi_cod_direccion,
        c.CODIGO_LUGAR_NACIMIENTO,
        nat.CIUDAD AS Ciudad_nacionalidad,
        nat.NACIONALIDAD,    
        nat.Nivel_de_riesgo_asignado AS nivel_riesgo_nacionalidad,
        j.C__DIGO_DANE_DEL_MUNICIPIO AS Codigo_municipio,
        j.MUNICIPIO AS municipio_direccion_1,
        j.NIVEL_DE_RIESGO_ASIGNADO AS nivel_riesgo_jurisdiccion,
        FORMAT_DATE('%Y-%m', CURRENT_DATE()) AS FECHA_ALERTA_MES,
        CURRENT_DATE() AS FECHA_ALERTA,
        p.FECHA_INICIO_POLIZA
    FROM 
        `sb-ecosistemaanalitico-lago.seguros_bolivar.t_polizas_riesgos_endosos` p

    LEFT JOIN (
        SELECT DISTINCT 
            TIPO_DOCUMENTO,
            KEY_ID,
            CODIGO_LUGAR_REGISTRO,
            NOMBRE_LUGAR_REGISTRO,
            CODIGO_LUGAR_NACIMIENTO,
            NOMBRE_LUGAR_NACIMIENTO,
            NACIONALIDAD,
            CODIGO_CODAZZI_DIRECCION_1,
            CODIGO_CODAZZI_DIRECCION_2,
            CODIGO_CIIU
        FROM `sb-ecosistemaanalitico-lago.seguros_bolivar.t_clientes_juridicos`
        WHERE CODIGO_LUGAR_REGISTRO IS NOT NULL OR CODIGO_LUGAR_NACIMIENTO IS NOT NULL

        UNION ALL

        SELECT DISTINCT 
            TIPO_DOCUMENTO,
            KEY_ID,
            CODIGO_LUGAR_REGISTRO,
            NOMBRE_LUGAR_REGISTRO,
            CODIGO_LUGAR_NACIMIENTO,
            NOMBRE_LUGAR_NACIMIENTO,
            NACIONALIDAD,
            CODIGO_CODAZZI_DIRECCION_1,
            CODIGO_CODAZZI_DIRECCION_2,
            CODIGO_CIIU
        FROM `sb-ecosistemaanalitico-lago.seguros_bolivar.t_clientes_naturales`
        WHERE CODIGO_LUGAR_REGISTRO IS NOT NULL OR CODIGO_LUGAR_NACIMIENTO IS NOT NULL
    ) c
    ON p.KEY_ID_TOMADOR = c.KEY_ID
       AND p.TIPO_DOCUMENTO_TOMADOR = c.TIPO_DOCUMENTO

    LEFT JOIN `sb-ecosistemaanalitico-lago.cumplimiento_normativo_prod.t_nacionalidad_real` nat
      ON c.CODIGO_LUGAR_NACIMIENTO = nat.ID

    LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_jurisdicciones_nivel_riesgo` j
      ON c.CODIGO_CODAZZI_DIRECCION_1 = j.C__DIGO_DANE_DEL_MUNICIPIO

    WHERE 
        DATE(p.FECHA_FIN_POLIZA) >= CURRENT_DATE()
        AND p.MARCA_ANULACION != 'S'
        AND (nat.Nivel_de_riesgo_asignado = "Alto" OR j.NIVEL_DE_RIESGO_ASIGNADO = "Alto")
),

numeradas AS (
    SELECT *,
        ROW_NUMBER() OVER (PARTITION BY KEY_ID_TOMADOR ORDER BY FECHA_INICIO_POLIZA) AS rn
    FROM resultado
),

con_riesgos AS (
    SELECT 
        n.*,
        ract.Nivel_de_riesgo AS nivel_riesgo_actividad_economica,
        rprod.NIVEL_DE_RIESGO AS nivel_riesgo_producto
    FROM numeradas n

    -- Nivel de riesgo por actividad económica
    LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_actividad_economica_nivel_riesgo` ract
        ON n.CODIGO_CIIU = ract.C__digo

    -- Nivel de riesgo por producto y ramo
    LEFT JOIN `sb-sandbox-usuarios.sandbox_cumplimiento.t_productos_nivel_riesgo` rprod
        ON n.CODIGO_RAMO_EMISION = SAFE_CAST(rprod.C__digo_del_Ramo AS INT64)
        AND n.CODIGO_PRODUCTO = SAFE_CAST(rprod.C__digo_de_Producto AS INT64)
    where   ract.Nivel_de_riesgo IN ("ALTO","Alto")
    AND  rprod.NIVEL_DE_RIESGO IN ("ALTO","Alto")
    AND CODIGO_COMPANIA = 2
)

SELECT 
    CODIGO_COMPANIA,
    NUMERO_POLIZA,
    TIPO_DOCUMENTO_TOMADOR,
    KEY_ID_TOMADOR,
    CODIGO_RAMO_EMISION,
    NOMBRE_RAMO_EMISION,
    CODIGO_PRODUCTO,
    NOMBRE_SUBPRODUCTO,
    CODIGO_LUGAR_REGISTRO,
    NOMBRE_LUGAR_REGISTRO,
    Codazzi_cod_direccion,
    CODIGO_LUGAR_NACIMIENTO,
    Ciudad_nacionalidad,
    NACIONALIDAD,
    nivel_riesgo_nacionalidad,
    Codigo_municipio,
    municipio_direccion_1,
    nivel_riesgo_jurisdiccion,
    CODIGO_CIIU,
    nivel_riesgo_actividad_economica,
    nivel_riesgo_producto,
    FECHA_ALERTA_MES,
    FECHA_ALERTA
FROM con_riesgos
WHERE rn = 1;







INSERT ------
/* ============================================================
   INSERT INTO LIST_0001_VISOR_REPO
   Basado 1:1 en tu CREATE OR REPLACE TABLE original,
   con exclusión de registros ya alertados en SEG_0105_VISOR_REPO.
   ============================================================ */

INSERT INTO `sb-sandbox-usuarios.sandbox_cumplimiento.LIST_0001_VISOR_REPO` (
  CODIGO_COMPANIA,
  NUMERO_POLIZA,
  CODIGO_PRODUCTO1,
  FECHA_EMISION,
  tipo_doc,
  key_id,
  CODIGO_RESTRICCION,
  DESCRIPCION,
  MOTIVO_ALERTA,
  TIPO_BENEFICIARIO,
  PORCENTAJE,
  MARCA_ESTADO,
  CODIGO_PRODUCTO,
  CODIGO_RAMO_EMISION,
  FECHA_FIN_POLIZA,
  FECHA_ALERTA_MES,
  FECHA_ALERTA,
  FECHA_MODIFICACION
)

WITH actores AS (
  /* ===================== 1️⃣ Tomador / Beneficiario ===================== */
  SELECT DISTINCT
    b.CODIGO_COMPANIA,
    b.NUMERO_POLIZA,
    b.CODIGO_PRODUCTO,
    b.FECHA_EMISION,
    b.TIPO_DOCUMENTO_TERCERO  AS tipo_doc,
    b.KEY_ID_TOMADOR          AS key_id,
    b.TIPO_BENEFICIARIO,
    b.PORCENTAJE,
    b.MARCA_ESTADO
  FROM `sb-ecosistemaanalitico-lago.seguros_bolivar.t_beneficiarios_porcentaje` b
),

restricciones AS (
  /* ===================== 2️⃣ Terceros restringidos ===================== */
  SELECT 
    TIPO_DOCUMENTO_TERCERO,
    KEY_ID,
    CODIGO_RESTRICCION,
    DESCRIPCION
  FROM `sb-ecosistemaanalitico-lago.seguros_bolivar.t_terceros_restringidos`
  WHERE CODIGO_RESTRICCION IN (23,29,33,35,50,28)
),

polizas AS (
  /* ===================== 3️⃣ Solo FECHA_FIN_POLIZA más reciente ===================== */
  SELECT
    p.NUMERO_POLIZA,
    p.FECHA_FIN_POLIZA,
    p.CODIGO_RAMO_EMISION, 
    p.CODIGO_PRODUCTO
  FROM (
    SELECT
      NUMERO_POLIZA,
      FECHA_FIN_POLIZA,
      CODIGO_RAMO_EMISION, 
      CODIGO_PRODUCTO,
      ROW_NUMBER() OVER (
        PARTITION BY NUMERO_POLIZA
        ORDER BY FECHA_PROCESO DESC
      ) AS rn
    FROM `sb-ecosistemaanalitico-lago.seguros_bolivar.t_polizas_riesgos_endosos`
  ) p
  WHERE p.rn = 1
),

con_riesgos AS (
  /* ===================== 4️⃣ Unión final ===================== */
  SELECT DISTINCT
    a.CODIGO_COMPANIA,
    a.NUMERO_POLIZA,
    a.CODIGO_PRODUCTO AS CODIGO_PRODUCTO1,
    a.FECHA_EMISION,
    a.tipo_doc,
    a.key_id,
    r.CODIGO_RESTRICCION,
    r.DESCRIPCION,
    CASE r.CODIGO_RESTRICCION
      WHEN 23 THEN 'Beneficiario de seguro catalogado como PEP'
      WHEN 29 THEN 'Beneficiario de seguro sin información actualizada'
      WHEN 33 THEN 'Beneficiario de seguro con actividad de alto riesgo'
      WHEN 35 THEN 'Beneficiario de seguro asociado anticorrupción y soborno'
      WHEN 50 THEN 'Beneficiario de seguro impactado FATCA/CRS'
      WHEN 28 THEN 'Beneficiario de seguro con investigación procesal'
    END AS MOTIVO_ALERTA,
    a.TIPO_BENEFICIARIO,
    a.PORCENTAJE,
    a.MARCA_ESTADO,
    p.CODIGO_PRODUCTO,
    p.CODIGO_RAMO_EMISION,
    p.FECHA_FIN_POLIZA,
    FORMAT_DATE('%Y-%m', CURRENT_DATE()) AS FECHA_ALERTA_MES,  -- marcador año-mes
    CURRENT_DATE() AS FECHA_ALERTA,                             -- fecha exacta de alerta
    CURRENT_TIMESTAMP() AS FECHA_MODIFICACION                   -- timestamp del proceso
  FROM actores a
  JOIN restricciones r
    ON a.tipo_doc = r.TIPO_DOCUMENTO_TERCERO
   AND a.key_id   = r.KEY_ID
  LEFT JOIN polizas p
    ON a.NUMERO_POLIZA = p.NUMERO_POLIZA
  WHERE DATE(p.FECHA_FIN_POLIZA) >= CURRENT_DATE()
)

/* ===================== 5️⃣ Inserta evitando duplicados y alertas previas ===================== */
SELECT *
FROM con_riesgos
WHERE NOT EXISTS (
    SELECT 1
    FROM `sb-sandbox-usuarios.sandbox_cumplimiento.LIST_0001_VISOR_REPO` t
    WHERE t.key_id = con_riesgos.key_id
)
ORDER BY con_riesgos.FECHA_MODIFICACION DESC;
