# Crear o reemplazar tabla que consolida alertas por tomadores en lista restrictiva
CREATE OR REPLACE TABLE sb-sandbox-usuarios.sandbox_cumplimiento.SEG_0311_VISOR_REPO AS

# ---------------------------
# CTE: PolizasConFila
# Se selecciona la última póliza vigente por tomador de lista 23
# ---------------------------
WITH PolizasConFila AS (
    SELECT distinct
        # Datos generales de la póliza
        p.CODIGO_COMPANIA, p.CODIGO_RAMO_EMISION, p.NOMBRE_RAMO_EMISION,
        p.CODIGO_PRODUCTO, p.NOMBRE_PRODUCTO, p.CLAVE_AGENTE,
        p.CODIGO_LOCALIDAD, p.NOMBRE_LOCALIDAD, p.CODIGO_CANAL, p.NOMBRE_CANAL,
        p.NUMERO_POLIZA, p.NUMERO_POLIZA_MADRE, p.TIPO_DOCUMENTO_TOMADOR,
        p.KEY_ID_TOMADOR, p.FECHA_INICIO_POLIZA, p.FECHA_FIN_POLIZA, p.FECHA_EMISION_ENDOSO,

        # Datos de lista restrictiva
        l.CODIGO_LISTA, l.NOMBRE_LISTA,

        # Marca si es PEP
        tcn.PUBLICAMENTE_EXPUESTA,

        # Número de fila para seleccionar la más reciente por tomador
        ROW_NUMBER() OVER (
            PARTITION BY CAST(p.KEY_ID_TOMADOR AS STRING), CAST(p.TIPO_DOCUMENTO_TOMADOR AS STRING)
            ORDER BY p.FECHA_EMISION_ENDOSO DESC
        ) AS fila,

        # Metadatos de fecha
        FORMAT_DATE('%Y-%m', CURRENT_DATE()) AS FECHA_ALERTA_MES, 
        CURRENT_DATE() AS FECHA_ALERTA

    FROM 
        `sb-ecosistemaanalitico-lago.seguros_bolivar.t_polizas_riesgos_endosos` p
    
    INNER JOIN 
        `sb-ecosistemaanalitico-lago.seguros_bolivar.t_lista_restrictivas` l
        ON p.TIPO_DOCUMENTO_TOMADOR = l.TIPO_DOCUMENTO
        AND p.KEY_ID_TOMADOR = l.KEY_ID
        AND l.CODIGO_LISTA = '23'
    
    INNER JOIN (
    SELECT KEY_ID, TIPO_DOCUMENTO, PUBLICAMENTE_EXPUESTA
    FROM sb-ecosistemaanalitico-lago.seguros_bolivar.t_clientes_naturales
    
    UNION ALL
    
    SELECT KEY_ID, TIPO_DOCUMENTO, PUBLICAMENTE_EXPUESTA
    FROM sb-ecosistemaanalitico-lago.seguros_bolivar.t_clientes_juridicos) tcn
        ON p.TIPO_DOCUMENTO_TOMADOR = tcn.TIPO_DOCUMENTO
        AND p.KEY_ID_TOMADOR = tcn.KEY_ID
    
    WHERE 
        p.FECHA_FIN_POLIZA > CURRENT_TIMESTAMP()   # Vigentes
        AND p.CODIGO_COMPANIA = 2                  # Solo compañía 2
        AND p.FECHA_INICIO_POLIZA >= "2025-01-01" 
        AND tcn.PUBLICAMENTE_EXPUESTA != 'S'     # Clientes recientes
                AND p.MARCA_ANULACION != 'S' 
)

# ---------------------------
# Selección final para la tabla
# Incluye unión de personas naturales y jurídicas para validar PEPs
# ---------------------------
SELECT distinct
    p.CODIGO_COMPANIA, p.CODIGO_RAMO_EMISION, p.NOMBRE_RAMO_EMISION,
    p.CODIGO_PRODUCTO, p.NOMBRE_PRODUCTO, p.CLAVE_AGENTE,
    p.CODIGO_LOCALIDAD, p.NOMBRE_LOCALIDAD, p.CODIGO_CANAL, p.NOMBRE_CANAL,
    p.NUMERO_POLIZA, p.NUMERO_POLIZA_MADRE, p.TIPO_DOCUMENTO_TOMADOR,
    p.KEY_ID_TOMADOR, p.FECHA_INICIO_POLIZA, p.FECHA_FIN_POLIZA,
     p.FECHA_EMISION_ENDOSO, 
    l.CODIGO_LISTA, l.NOMBRE_LISTA,
    tcn.PUBLICAMENTE_EXPUESTA,
    FECHA_ALERTA_MES,
    p.FECHA_ALERTA

FROM 
    PolizasConFila p

# Unión con personas naturales y jurídicas
INNER JOIN (
    SELECT KEY_ID, TIPO_DOCUMENTO, PUBLICAMENTE_EXPUESTA
    FROM sb-ecosistemaanalitico-lago.seguros_bolivar.t_clientes_naturales
   
    UNION ALL
    
    SELECT KEY_ID, TIPO_DOCUMENTO, PUBLICAMENTE_EXPUESTA
    FROM sb-ecosistemaanalitico-lago.seguros_bolivar.t_clientes_juridicos) tcn
    ON p.TIPO_DOCUMENTO_TOMADOR = tcn.TIPO_DOCUMENTO
    AND p.KEY_ID_TOMADOR = tcn.KEY_ID

INNER JOIN 
    `sb-ecosistemaanalitico-lago.seguros_bolivar.t_lista_restrictivas` l
    ON p.TIPO_DOCUMENTO_TOMADOR = l.TIPO_DOCUMENTO
    AND p.KEY_ID_TOMADOR = l.KEY_ID

WHERE 
    p.fila = 1                             # Solo la última póliza por tomador
    AND l.CODIGO_LISTA = '23'              # Lista restrictiva 23
    AND tcn.PUBLICAMENTE_EXPUESTA != 'S'   # Excluir PEPs
    AND p.FECHA_FIN_POLIZA > CURRENT_TIMESTAMP()
    AND p.CODIGO_COMPANIA = 2
    AND p.FECHA_INICIO_POLIZA >= "2025-01-01"  







INSERT ----

INSERT INTO `sb-sandbox-usuarios.sandbox_cumplimiento.SEG_0311_VISOR_REPO` 
    (
     CODIGO_COMPANIA, CODIGO_RAMO_EMISION, NOMBRE_RAMO_EMISION, CODIGO_PRODUCTO, 
     NOMBRE_PRODUCTO, CLAVE_AGENTE, CODIGO_LOCALIDAD, NOMBRE_LOCALIDAD, CODIGO_CANAL, 
     NOMBRE_CANAL, NUMERO_POLIZA, NUMERO_POLIZA_MADRE, TIPO_DOCUMENTO_TOMADOR, 
     KEY_ID_TOMADOR, FECHA_INICIO_POLIZA, FECHA_FIN_POLIZA,  FECHA_EMISION_ENDOSO, 
     CODIGO_LISTA, NOMBRE_LISTA, 
     PUBLICAMENTE_EXPUESTA,
     FECHA_ALERTA_MES, FECHA_ALERTA
    )


WITH PolizasConFila AS (
    SELECT distinct
        # Datos de la póliza
        p.CODIGO_COMPANIA, p.CODIGO_RAMO_EMISION, p.NOMBRE_RAMO_EMISION,
        p.CODIGO_PRODUCTO, p.NOMBRE_PRODUCTO, p.CLAVE_AGENTE,
        p.CODIGO_LOCALIDAD, p.NOMBRE_LOCALIDAD, p.CODIGO_CANAL, p.NOMBRE_CANAL,
        p.NUMERO_POLIZA, p.NUMERO_POLIZA_MADRE, p.TIPO_DOCUMENTO_TOMADOR,
        p.KEY_ID_TOMADOR, p.FECHA_INICIO_POLIZA, p.FECHA_FIN_POLIZA,
         p.FECHA_EMISION_ENDOSO, 

        # Datos de lista restrictiva
        l.CODIGO_LISTA, l.NOMBRE_LISTA,

        # Datos del cliente
        tcn.PUBLICAMENTE_EXPUESTA,

        # Fecha actual y mes de alerta
        FORMAT_DATE('%Y-%m', CURRENT_DATE()) AS FECHA_ALERTA_MES,
        CURRENT_DATE() AS FECHA_ALERTA,

        # Número de fila para identificar la última póliza por tomador
        ROW_NUMBER() OVER (
            PARTITION BY CAST(p.KEY_ID_TOMADOR AS STRING), CAST(p.TIPO_DOCUMENTO_TOMADOR AS STRING)
            ORDER BY p.FECHA_EMISION_ENDOSO DESC
        ) AS fila

    FROM 
        `sb-ecosistemaanalitico-lago.seguros_bolivar.t_polizas_riesgos_endosos` p
    INNER JOIN 
        `sb-ecosistemaanalitico-lago.seguros_bolivar.t_lista_restrictivas` l
        ON p.TIPO_DOCUMENTO_TOMADOR = l.TIPO_DOCUMENTO
        AND p.KEY_ID_TOMADOR = l.KEY_ID
        AND l.CODIGO_LISTA IN ('23')
    INNER JOIN 
        ( SELECT KEY_ID, TIPO_DOCUMENTO, PUBLICAMENTE_EXPUESTA
            FROM sb-ecosistemaanalitico-lago.seguros_bolivar.t_clientes_naturales
            UNION ALL
            SELECT KEY_ID, TIPO_DOCUMENTO, PUBLICAMENTE_EXPUESTA
            FROM sb-ecosistemaanalitico-lago.seguros_bolivar.t_clientes_juridicos) tcn
        ON p.TIPO_DOCUMENTO_TOMADOR = tcn.TIPO_DOCUMENTO
        AND p.KEY_ID_TOMADOR = tcn.KEY_ID
    WHERE 
        p.FECHA_FIN_POLIZA > CURRENT_TIMESTAMP()         # Póliza vigente
        AND p.CODIGO_COMPANIA = 2                        # Compañía específica
        AND p.FECHA_INICIO_POLIZA >= "2025-01-01"  
        AND tcn.PUBLICAMENTE_EXPUESTA != 'S'          # Relación iniciada desde octubre 2024
                        AND p.MARCA_ANULACION != 'S' 
)

SELECT distinct
    p.CODIGO_COMPANIA, p.CODIGO_RAMO_EMISION, p.NOMBRE_RAMO_EMISION, p.CODIGO_PRODUCTO,
    p.NOMBRE_PRODUCTO, p.CLAVE_AGENTE, p.CODIGO_LOCALIDAD, p.NOMBRE_LOCALIDAD,
    p.CODIGO_CANAL, p.NOMBRE_CANAL, p.NUMERO_POLIZA, p.NUMERO_POLIZA_MADRE,
    p.TIPO_DOCUMENTO_TOMADOR, p.KEY_ID_TOMADOR, p.FECHA_INICIO_POLIZA, p.FECHA_FIN_POLIZA,
    p.FECHA_EMISION_ENDOSO,
    l.CODIGO_LISTA, l.NOMBRE_LISTA,
    tcn.PUBLICAMENTE_EXPUESTA,
    FECHA_ALERTA_MES,
    p.FECHA_ALERTA

FROM 
    PolizasConFila p
INNER JOIN  ( SELECT KEY_ID, TIPO_DOCUMENTO, PUBLICAMENTE_EXPUESTA
    FROM sb-ecosistemaanalitico-lago.seguros_bolivar.t_clientes_naturales
    UNION ALL
    SELECT KEY_ID, TIPO_DOCUMENTO, PUBLICAMENTE_EXPUESTA
    FROM sb-ecosistemaanalitico-lago.seguros_bolivar.t_clientes_juridicos) tcn
    ON p.TIPO_DOCUMENTO_TOMADOR = tcn.TIPO_DOCUMENTO
    AND p.KEY_ID_TOMADOR = tcn.KEY_ID
INNER JOIN 
    `sb-ecosistemaanalitico-lago.seguros_bolivar.t_lista_restrictivas` l
    ON p.TIPO_DOCUMENTO_TOMADOR = l.TIPO_DOCUMENTO
    AND p.KEY_ID_TOMADOR = l.KEY_ID

WHERE 
    p.fila = 1                                   # Solo póliza más reciente por tomador
    AND l.CODIGO_LISTA = '23'                    # Confirmación lista restrictiva
    AND tcn.PUBLICAMENTE_EXPUESTA != 'S'         # Excluir personas expuestas públicamente
    AND p.FECHA_FIN_POLIZA > CURRENT_TIMESTAMP()
    AND p.CODIGO_COMPANIA = 2
    AND p.FECHA_INICIO_POLIZA >= "2025-01-01" 

    # Evita insertar duplicados ya presentes en la tabla destino en el mismo mes
    AND NOT EXISTS (
        SELECT 1
        FROM `sb-sandbox-usuarios.sandbox_cumplimiento.SEG_0311_VISOR_REPO` repo
        WHERE repo.NUMERO_POLIZA = p.NUMERO_POLIZA
          AND repo.KEY_ID_TOMADOR = p.KEY_ID_TOMADOR
          AND repo.TIPO_DOCUMENTO_TOMADOR = p.TIPO_DOCUMENTO_TOMADOR
    )
