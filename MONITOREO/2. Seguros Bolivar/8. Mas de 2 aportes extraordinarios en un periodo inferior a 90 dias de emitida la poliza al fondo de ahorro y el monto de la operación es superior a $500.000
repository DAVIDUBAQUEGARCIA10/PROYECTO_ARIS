WITH ranked_data AS (
    SELECT  
        NUMERO_POLIZA,
        CODIGO_COMPANIA,
        CODIGO_RAMO_EMISION,
        NOMBRE_RAMO_EMISION,
        CODIGO_PRODUCTO,
        NOMBRE_PRODUCTO,
        FECHA_EMISION_POLIZA,
        FECHA_VIGENCIA_POLIZA,
        FECHA_VENCIMIENTO_POLIZA,
        FECHA_CANCELACION_POLIZA,
        FECHA_VIGENCIA_ENDOSO,
        FECHA_VENCIMIENTO_ENDOSO,
        ESTADO_NEGOCIO,
        FORMA_COBRO,
        CANAL_DESCUENTO,
        TIPO_DOCUMENTO_TOMADOR,
        NUMERO_DOCUMENTO_TOMADOR,
        NOMBRE_TOMADOR,
        CODIGO_ACTIVIDAD_ECONOMICA_TOMADOR,
        COUNT(*) AS CANTIDAD_REGISTROS,
        ROW_NUMBER() OVER (PARTITION BY NUMERO_DOCUMENTO_TOMADOR ORDER BY COUNT(*) DESC) AS rn
    FROM 
        `sb-ecosistemaanalitico-lago.datamart.t_produccion_recaudo_diario`
    WHERE 
        VALOR_RECAUDO_MES > 500000
        AND DATE_DIFF(FECHA_RECAUDO, FECHA_VIGENCIA_ENDOSO, DAY) <= 90
        AND DATE_DIFF(FECHA_RECAUDO, FECHA_VIGENCIA_ENDOSO, DAY) >= 0        
        AND FECHA_VIGENCIA_POLIZA >= "2024-01-01"
        AND FECHA_RECAUDO >= "2024-01-01"        
        AND CODIGO_RAMO_EMISION IN (46,47,48,49)
        AND FORMA_COBRO != "CONVENIO"
    GROUP BY 
        NUMERO_POLIZA,
        CODIGO_COMPANIA,
        CODIGO_RAMO_EMISION,
        NOMBRE_RAMO_EMISION,
        CODIGO_PRODUCTO,
        NOMBRE_PRODUCTO,
        FECHA_EMISION_POLIZA,
        FECHA_VIGENCIA_POLIZA,
        FECHA_VENCIMIENTO_POLIZA,
        FECHA_CANCELACION_POLIZA,
        FECHA_VIGENCIA_ENDOSO,
        FECHA_VENCIMIENTO_ENDOSO,
        ESTADO_NEGOCIO,
        FORMA_COBRO,
        CANAL_DESCUENTO,
        TIPO_DOCUMENTO_TOMADOR,
        NUMERO_DOCUMENTO_TOMADOR,
        NOMBRE_TOMADOR,
        CODIGO_ACTIVIDAD_ECONOMICA_TOMADOR
    HAVING 
        COUNT(*) > 3
)
SELECT  
    NUMERO_POLIZA,
    CODIGO_COMPANIA,
    CODIGO_RAMO_EMISION,
    NOMBRE_RAMO_EMISION,
    CODIGO_PRODUCTO,
    NOMBRE_PRODUCTO,
    FECHA_EMISION_POLIZA,
    FECHA_VIGENCIA_POLIZA,
    FECHA_VENCIMIENTO_POLIZA,
    FECHA_CANCELACION_POLIZA,
    FECHA_VIGENCIA_ENDOSO,
    FECHA_VENCIMIENTO_ENDOSO,
    ESTADO_NEGOCIO,
    FORMA_COBRO,
    CANAL_DESCUENTO,
    TIPO_DOCUMENTO_TOMADOR,
    NUMERO_DOCUMENTO_TOMADOR,
    NOMBRE_TOMADOR,
    CODIGO_ACTIVIDAD_ECONOMICA_TOMADOR,
    CANTIDAD_REGISTROS
FROM
    ranked_data
WHERE
    rn = 1
ORDER BY 
    CANTIDAD_REGISTROS DESC;


CREATE ----


-- Crear o reemplazar la tabla SEG_0061_VISOR_REPO con la fecha de alerta
CREATE OR REPLACE TABLE sb-sandbox-usuarios.sandbox_cumplimiento.SEG_0061_VISOR_REPO AS
WITH ranked_data AS (
    SELECT  
        NUMERO_POLIZA,
        CODIGO_COMPANIA,
        CODIGO_RAMO_EMISION,
        NOMBRE_RAMO_EMISION,
        CODIGO_PRODUCTO,
        NOMBRE_PRODUCTO,
        FECHA_EMISION_POLIZA,
        FECHA_VIGENCIA_POLIZA,
        FECHA_VENCIMIENTO_POLIZA,
        FECHA_CANCELACION_POLIZA,
        FECHA_VIGENCIA_ENDOSO,
        FECHA_VENCIMIENTO_ENDOSO,
        ESTADO_NEGOCIO,
        FORMA_COBRO,
        CANAL_DESCUENTO,
        TIPO_DOCUMENTO_TOMADOR,
        NUMERO_DOCUMENTO_TOMADOR,
        NOMBRE_TOMADOR,
        CODIGO_ACTIVIDAD_ECONOMICA_TOMADOR,
        COUNT(*) AS CANTIDAD_REGISTROS,
        ROW_NUMBER() OVER (PARTITION BY NUMERO_DOCUMENTO_TOMADOR ORDER BY COUNT(*) DESC) AS rn
    FROM 
        `sb-ecosistemaanalitico-lago.datamart.t_produccion_recaudo_diario`
    WHERE 
        VALOR_RECAUDO_MES > 500000
        AND DATE_DIFF(FECHA_RECAUDO, FECHA_VIGENCIA_ENDOSO, DAY) <= 90
        AND DATE_DIFF(FECHA_RECAUDO, FECHA_VIGENCIA_ENDOSO, DAY) >= 0        
        AND FECHA_VIGENCIA_POLIZA >= "2024-01-01"
        AND FECHA_RECAUDO >= "2024-01-01"        
        AND CODIGO_RAMO_EMISION IN (46,47,48,49)
        AND FORMA_COBRO != "CONVENIO"
    GROUP BY 
        NUMERO_POLIZA,
        CODIGO_COMPANIA,
        CODIGO_RAMO_EMISION,
        NOMBRE_RAMO_EMISION,
        CODIGO_PRODUCTO,
        NOMBRE_PRODUCTO,
        FECHA_EMISION_POLIZA,
        FECHA_VIGENCIA_POLIZA,
        FECHA_VENCIMIENTO_POLIZA,
        FECHA_CANCELACION_POLIZA,
        FECHA_VIGENCIA_ENDOSO,
        FECHA_VENCIMIENTO_ENDOSO,
        ESTADO_NEGOCIO,
        FORMA_COBRO,
        CANAL_DESCUENTO,
        TIPO_DOCUMENTO_TOMADOR,
        NUMERO_DOCUMENTO_TOMADOR,
        NOMBRE_TOMADOR,
        CODIGO_ACTIVIDAD_ECONOMICA_TOMADOR
    HAVING 
        COUNT(*) > 3
)
SELECT  
    NUMERO_POLIZA,
    CODIGO_COMPANIA,
    CODIGO_RAMO_EMISION,
    NOMBRE_RAMO_EMISION,
    CODIGO_PRODUCTO,
    NOMBRE_PRODUCTO,
    FECHA_EMISION_POLIZA,
    FECHA_VIGENCIA_POLIZA,
    FECHA_VENCIMIENTO_POLIZA,
    FECHA_CANCELACION_POLIZA,
    FECHA_VIGENCIA_ENDOSO,
    FECHA_VENCIMIENTO_ENDOSO,
    ESTADO_NEGOCIO,
    FORMA_COBRO,
    CANAL_DESCUENTO,
    TIPO_DOCUMENTO_TOMADOR,
    NUMERO_DOCUMENTO_TOMADOR,
    NOMBRE_TOMADOR,
    CODIGO_ACTIVIDAD_ECONOMICA_TOMADOR,
    CANTIDAD_REGISTROS,
    CURRENT_DATE() AS FECHA_ALERTA  -- Agregar la fecha de alerta
FROM
    ranked_data
WHERE
    rn = 1
ORDER BY 
    CANTIDAD_REGISTROS DESC;


INSERT ----------
-- Insertar solo los registros nuevos en la tabla SEG_0061_VISOR_REPO
INSERT INTO sb-sandbox-usuarios.sandbox_cumplimiento.SEG_0061_VISOR_REPO
WITH ranked_data AS (
    SELECT  
        NUMERO_POLIZA,
        CODIGO_COMPANIA,
        CODIGO_RAMO_EMISION,
        NOMBRE_RAMO_EMISION,
        CODIGO_PRODUCTO,
        NOMBRE_PRODUCTO,
        FECHA_EMISION_POLIZA,
        FECHA_VIGENCIA_POLIZA,
        FECHA_VENCIMIENTO_POLIZA,
        FECHA_CANCELACION_POLIZA,
        FECHA_VIGENCIA_ENDOSO,
        FECHA_VENCIMIENTO_ENDOSO,
        ESTADO_NEGOCIO,
        FORMA_COBRO,
        CANAL_DESCUENTO,
        TIPO_DOCUMENTO_TOMADOR,
        NUMERO_DOCUMENTO_TOMADOR,
        NOMBRE_TOMADOR,
        CODIGO_ACTIVIDAD_ECONOMICA_TOMADOR,
        COUNT(*) AS CANTIDAD_REGISTROS,
        ROW_NUMBER() OVER (PARTITION BY NUMERO_DOCUMENTO_TOMADOR ORDER BY COUNT(*) DESC) AS rn
    FROM 
        `sb-ecosistemaanalitico-lago.datamart.t_produccion_recaudo_diario`
    WHERE 
        VALOR_RECAUDO_MES > 500000
        AND DATE_DIFF(FECHA_RECAUDO, FECHA_VIGENCIA_ENDOSO, DAY) <= 90
        AND DATE_DIFF(FECHA_RECAUDO, FECHA_VIGENCIA_ENDOSO, DAY) >= 0        
        AND FECHA_VIGENCIA_POLIZA >= "2024-01-01"
        AND FECHA_RECAUDO >= "2024-01-01"        
        AND CODIGO_RAMO_EMISION IN (46,47,48,49)
        AND FORMA_COBRO != "CONVENIO"
    GROUP BY 
        NUMERO_POLIZA,
        CODIGO_COMPANIA,
        CODIGO_RAMO_EMISION,
        NOMBRE_RAMO_EMISION,
        CODIGO_PRODUCTO,
        NOMBRE_PRODUCTO,
        FECHA_EMISION_POLIZA,
        FECHA_VIGENCIA_POLIZA,
        FECHA_VENCIMIENTO_POLIZA,
        FECHA_CANCELACION_POLIZA,
        FECHA_VIGENCIA_ENDOSO,
        FECHA_VENCIMIENTO_ENDOSO,
        ESTADO_NEGOCIO,
        FORMA_COBRO,
        CANAL_DESCUENTO,
        TIPO_DOCUMENTO_TOMADOR,
        NUMERO_DOCUMENTO_TOMADOR,
        NOMBRE_TOMADOR,
        CODIGO_ACTIVIDAD_ECONOMICA_TOMADOR
    HAVING 
        COUNT(*) > 3
)
-- Insertar solo registros nuevos
SELECT  
    NUMERO_POLIZA,
    CODIGO_COMPANIA,
    CODIGO_RAMO_EMISION,
    NOMBRE_RAMO_EMISION,
    CODIGO_PRODUCTO,
    NOMBRE_PRODUCTO,
    FECHA_EMISION_POLIZA,
    FECHA_VIGENCIA_POLIZA,
    FECHA_VENCIMIENTO_POLIZA,
    FECHA_CANCELACION_POLIZA,
    FECHA_VIGENCIA_ENDOSO,
    FECHA_VENCIMIENTO_ENDOSO,
    ESTADO_NEGOCIO,
    FORMA_COBRO,
    CANAL_DESCUENTO,
    TIPO_DOCUMENTO_TOMADOR,
    NUMERO_DOCUMENTO_TOMADOR,
    NOMBRE_TOMADOR,
    CODIGO_ACTIVIDAD_ECONOMICA_TOMADOR,
    CANTIDAD_REGISTROS,
    CURRENT_DATE() AS FECHA_ALERTA
FROM
    ranked_data
WHERE
    rn = 1
    AND NOT EXISTS (
        SELECT 1
        FROM sb-sandbox-usuarios.sandbox_cumplimiento.SEG_0061_VISOR_REPO t
        WHERE t.NUMERO_POLIZA = ranked_data.NUMERO_POLIZA
        AND t.NUMERO_DOCUMENTO_TOMADOR = ranked_data.NUMERO_DOCUMENTO_TOMADOR
    );

