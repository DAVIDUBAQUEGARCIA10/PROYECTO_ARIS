--CREATE
# Crear tabla COM_0115_VISOR_REPO con alertas por incremento injustificado del valor asegurado
CREATE OR REPLACE TABLE sb-sandbox-usuarios.sandbox_cumplimiento.COM_0115_VISOR_REPO AS

# ------------------------------
# CTE: ranked_policies
# Identifica casos donde el valor asegurado de una póliza nueva supera en más del 75% al de la anterior
# Bajo condiciones específicas de negocio y filtrado
# ------------------------------
WITH ranked_policies AS (
    SELECT 
        t1.CODIGO_COMPANIA,
        t1.CODIGO_RAMO_EMISION,
        t1.NOMBRE_RAMO_EMISION,
        t1.CODIGO_PRODUCTO,
        t1.NOMBRE_PRODUCTO,
        t1.CODIGO_SUBPRODUCTO,
        t1.NOMBRE_SUBPRODUCTO,
        t1.NUMERO_POLIZA_ANTERIOR,
        t2.SUM_VALOR_ASEGURADO AS VALOR_ASEGURADO_POLIZA_ANTERIOR, 
        t1.NUMERO_POLIZA AS NUMERO_POLIZA_ACTUAL,
        t1.SUM_VALOR_ASEGURADO AS VALOR_ASEGURADO_POLIZA_ACTUAL,    
        t1.TIPO_DOCUMENTO_TOMADOR,
        t1.KEY_ID_TOMADOR,
        t1.FECHA_INICIO_POLIZA,
        t1.FECHA_FIN_ENDOSO,
        t1.FECHA_FIN_POLIZA,
        t1.CODIGO_COBERTURA,

        # Se asigna número de fila para tomar la póliza más reciente por tomador
        ROW_NUMBER() OVER (
            PARTITION BY t1.TIPO_DOCUMENTO_TOMADOR, t1.KEY_ID_TOMADOR 
            ORDER BY t1.FECHA_INICIO_POLIZA DESC
        ) AS row_num

    FROM 
        (
            # Datos de la póliza actual
            SELECT DISTINCT
                CODIGO_COMPANIA, CODIGO_RAMO_EMISION, NOMBRE_RAMO_EMISION,
                CODIGO_PRODUCTO, NOMBRE_PRODUCTO, CODIGO_SUBPRODUCTO, NOMBRE_SUBPRODUCTO,
                NUMERO_POLIZA_ANTERIOR, NUMERO_POLIZA, TIPO_DOCUMENTO_TOMADOR, KEY_ID_TOMADOR,
                FECHA_INICIO_POLIZA, FECHA_FIN_ENDOSO, FECHA_FIN_POLIZA,
                VALOR_ASEGURADO AS SUM_VALOR_ASEGURADO,
                CODIGO_COBERTURA
            FROM sb-ecosistemaanalitico-lago.seguros_bolivar.t_polizas_riesgos_endosos
            WHERE 
                FECHA_EMISION_ENDOSO > "2025-01-01"                      # Endoso emitido en esa fecha
                AND FECHA_FIN_ENDOSO > "2025-01-01"                      # Aún vigente
                AND VALOR_ASEGURADO > 0                                  # Solo con valor asegurado
                AND TIPO_DOCUMENTO_TOMADOR NOT IN ('NT', 'NE')          # Excluye tipos no válidos
                AND CODIGO_RAMO_EMISION NOT IN (18,20,22,24,26,29,30,33,34,42,69,70,118,10,12,66,310) # Ramos excluidos
                AND NUMERO_POLIZA_ANTERIOR IS NOT NULL                  # Debe tener historial
                AND ALTURA_POLIZA != "1"                                # Excluye primera capa
                AND CODIGO_COMPANIA = 3
                AND NUMERO_ENDOSO = 0                                    # Solo pólizas (no endosos)
                AND CODIGO_RIESGO = 1                                    # Riesgo estándar
                AND PRIMA_EMITIDA > 0
        ) t1

    LEFT JOIN 
        (
            # Información de la póliza anterior
            SELECT DISTINCT
                CODIGO_COMPANIA, CODIGO_RAMO_EMISION, NOMBRE_RAMO_EMISION,
                CODIGO_PRODUCTO, NOMBRE_PRODUCTO, CODIGO_SUBPRODUCTO, NOMBRE_SUBPRODUCTO,
                NUMERO_POLIZA_ANTERIOR, NUMERO_POLIZA, TIPO_DOCUMENTO_TOMADOR, KEY_ID_TOMADOR,
                FECHA_INICIO_POLIZA, FECHA_FIN_ENDOSO, FECHA_FIN_POLIZA,
                VALOR_ASEGURADO AS SUM_VALOR_ASEGURADO,
                CODIGO_COBERTURA
            FROM sb-ecosistemaanalitico-lago.seguros_bolivar.t_polizas_riesgos_endosos
            WHERE 
                TIPO_DOCUMENTO_TOMADOR NOT IN ('NT', 'NE')
                AND CODIGO_RAMO_EMISION NOT IN (18,20,22,24,26,29,30,33,34,42,69,70,118,10,12,66,310)
                AND CODIGO_COMPANIA = 3
                AND NUMERO_ENDOSO = 0
                AND CODIGO_RIESGO = 1
                AND VALOR_ASEGURADO > 0
                AND PRIMA_EMITIDA > 0
                AND MARCA_ANULACION != 'S'
        ) t2
    ON t1.NUMERO_POLIZA_ANTERIOR = t2.NUMERO_POLIZA

    WHERE 
        # Condiciones de alerta
        t1.SUM_VALOR_ASEGURADO > 1.75 * t2.SUM_VALOR_ASEGURADO  # Aumento mayor al 75%
        AND RIGHT(CAST(t1.NUMERO_POLIZA_ANTERIOR AS STRING), 2) != RIGHT(CAST(t1.NUMERO_POLIZA AS STRING), 2)  # Cambio estructural
        AND t1.CODIGO_COBERTURA = t2.CODIGO_COBERTURA           # Debe ser misma cobertura
)

# ------------------------------
# Selección final: pólizas más recientes que cumplen condición
# ------------------------------
SELECT 
    CODIGO_COMPANIA,
    CODIGO_RAMO_EMISION,
    NOMBRE_RAMO_EMISION,
    CODIGO_PRODUCTO,
    NOMBRE_PRODUCTO,
    CODIGO_SUBPRODUCTO,
    NOMBRE_SUBPRODUCTO,
    NUMERO_POLIZA_ANTERIOR,
    VALOR_ASEGURADO_POLIZA_ANTERIOR, 
    NUMERO_POLIZA_ACTUAL,
    VALOR_ASEGURADO_POLIZA_ACTUAL,    
    TIPO_DOCUMENTO_TOMADOR,
    KEY_ID_TOMADOR,
    FECHA_INICIO_POLIZA,
    FECHA_FIN_ENDOSO,
    FECHA_FIN_POLIZA,
    CODIGO_COBERTURA,

    # Metadatos de ejecución
    FORMAT_DATE('%Y-%m', CURRENT_DATE()) AS FECHA_ALERTA_MES, 
    CURRENT_DATE() AS FECHA_ALERTA

FROM ranked_policies
WHERE row_num = 1         # Solo la más reciente por tomador
ORDER BY FECHA_INICIO_POLIZA DESC;








INSERT ---
# Inserta nuevas alertas en COM_0115_VISOR_REPO cuando el valor asegurado actual supera en más del 75% al anterior
INSERT INTO sb-sandbox-usuarios.sandbox_cumplimiento.COM_0115_VISOR_REPO (
    CODIGO_COMPANIA,
    CODIGO_RAMO_EMISION,
    NOMBRE_RAMO_EMISION,
    CODIGO_PRODUCTO,
    NOMBRE_PRODUCTO,
    CODIGO_SUBPRODUCTO,
    NOMBRE_SUBPRODUCTO,
    NUMERO_POLIZA_ANTERIOR,
    VALOR_ASEGURADO_POLIZA_ANTERIOR, 
    NUMERO_POLIZA_ACTUAL,
    VALOR_ASEGURADO_POLIZA_ACTUAL,    
    TIPO_DOCUMENTO_TOMADOR,
    KEY_ID_TOMADOR,
    FECHA_INICIO_POLIZA,
    FECHA_FIN_ENDOSO,
    FECHA_FIN_POLIZA,
    CODIGO_COBERTURA,
    FECHA_ALERTA_MES,
    FECHA_ALERTA
)

# -------------------------------
# CTE: ranked_policies
# Detecta incremento atípico del valor asegurado entre pólizas sucesivas del mismo tomador
# -------------------------------
WITH ranked_policies AS (
    SELECT 
        t1.CODIGO_COMPANIA,
        t1.CODIGO_RAMO_EMISION,
        t1.NOMBRE_RAMO_EMISION,
        t1.CODIGO_PRODUCTO,
        t1.NOMBRE_PRODUCTO,
        t1.CODIGO_SUBPRODUCTO,
        t1.NOMBRE_SUBPRODUCTO,
        t1.NUMERO_POLIZA_ANTERIOR,
        t2.SUM_VALOR_ASEGURADO AS VALOR_ASEGURADO_POLIZA_ANTERIOR, 
        t1.NUMERO_POLIZA AS NUMERO_POLIZA_ACTUAL,
        t1.SUM_VALOR_ASEGURADO AS VALOR_ASEGURADO_POLIZA_ACTUAL,    
        t1.TIPO_DOCUMENTO_TOMADOR,
        t1.KEY_ID_TOMADOR,
        t1.FECHA_INICIO_POLIZA,
        t1.FECHA_FIN_ENDOSO,
        t1.FECHA_FIN_POLIZA,
        t1.CODIGO_COBERTURA,
        FORMAT_DATE('%Y-%m', CURRENT_DATE()) AS FECHA_ALERTA_MES,

        # Se selecciona la póliza más reciente por tomador
        ROW_NUMBER() OVER (
            PARTITION BY t1.TIPO_DOCUMENTO_TOMADOR, t1.KEY_ID_TOMADOR 
            ORDER BY t1.FECHA_INICIO_POLIZA DESC
        ) AS row_num

    FROM 
        (
            # Póliza actual (nueva)
            SELECT DISTINCT
                CODIGO_COMPANIA, CODIGO_RAMO_EMISION, NOMBRE_RAMO_EMISION,
                CODIGO_PRODUCTO, NOMBRE_PRODUCTO, CODIGO_SUBPRODUCTO, NOMBRE_SUBPRODUCTO,
                NUMERO_POLIZA_ANTERIOR, NUMERO_POLIZA, TIPO_DOCUMENTO_TOMADOR, KEY_ID_TOMADOR,
                FECHA_INICIO_POLIZA, FECHA_FIN_ENDOSO, FECHA_FIN_POLIZA,
                VALOR_ASEGURADO AS SUM_VALOR_ASEGURADO,
                CODIGO_COBERTURA
            FROM sb-ecosistemaanalitico-lago.seguros_bolivar.t_polizas_riesgos_endosos
            WHERE 
                FECHA_EMISION_ENDOSO > "2025-01-01" 
                AND FECHA_FIN_ENDOSO > "2025-01-01"
                AND VALOR_ASEGURADO > 0
                AND TIPO_DOCUMENTO_TOMADOR NOT IN ('NT', 'NE')
                AND CODIGO_RAMO_EMISION NOT IN (18, 20, 22, 24, 26, 29, 30, 33, 34, 42, 69, 70, 118, 10, 12, 66, 310)
                AND NUMERO_POLIZA_ANTERIOR IS NOT NULL
                AND ALTURA_POLIZA != "1"
                AND CODIGO_COMPANIA = 3
                AND NUMERO_ENDOSO = 0
                AND CODIGO_RIESGO = 1
                AND PRIMA_EMITIDA > 0
                AND MARCA_ANULACION != 'S'
        ) t1
    LEFT JOIN 
        (
            # Póliza anterior
            SELECT DISTINCT
                CODIGO_COMPANIA, CODIGO_RAMO_EMISION, NOMBRE_RAMO_EMISION,
                CODIGO_PRODUCTO, NOMBRE_PRODUCTO, CODIGO_SUBPRODUCTO, NOMBRE_SUBPRODUCTO,
                NUMERO_POLIZA_ANTERIOR, NUMERO_POLIZA, TIPO_DOCUMENTO_TOMADOR, KEY_ID_TOMADOR,
                FECHA_INICIO_POLIZA, FECHA_FIN_ENDOSO, FECHA_FIN_POLIZA,
                VALOR_ASEGURADO AS SUM_VALOR_ASEGURADO,
                CODIGO_COBERTURA
            FROM sb-ecosistemaanalitico-lago.seguros_bolivar.t_polizas_riesgos_endosos
            WHERE 
                TIPO_DOCUMENTO_TOMADOR NOT IN ('NT', 'NE')
                AND CODIGO_RAMO_EMISION NOT IN (18, 20, 22, 24, 26, 29, 30, 33, 34, 42, 69, 70, 118, 10, 12, 66, 310)
                AND CODIGO_COMPANIA = 3
                AND NUMERO_ENDOSO = 0
                AND CODIGO_RIESGO = 1
                AND VALOR_ASEGURADO > 0
                AND PRIMA_EMITIDA > 0
                AND MARCA_ANULACION != 'S'
        ) t2     
    ON t1.NUMERO_POLIZA_ANTERIOR = t2.NUMERO_POLIZA 

    # Condición de alerta: incremento inusual del valor asegurado
    WHERE t1.SUM_VALOR_ASEGURADO > 1.75 * t2.SUM_VALOR_ASEGURADO
      AND RIGHT(CAST(t1.NUMERO_POLIZA_ANTERIOR AS STRING), 2) != RIGHT(CAST(t1.NUMERO_POLIZA AS STRING), 2)
      AND t1.CODIGO_COBERTURA = t2.CODIGO_COBERTURA
)

# -------------------------------
# Selección final: solo tomadores con póliza más reciente y sin duplicar
# -------------------------------
SELECT 
    CODIGO_COMPANIA,
    CODIGO_RAMO_EMISION,
    NOMBRE_RAMO_EMISION,
    CODIGO_PRODUCTO,
    NOMBRE_PRODUCTO,
    CODIGO_SUBPRODUCTO,
    NOMBRE_SUBPRODUCTO,
    NUMERO_POLIZA_ANTERIOR,
    VALOR_ASEGURADO_POLIZA_ANTERIOR, 
    NUMERO_POLIZA_ACTUAL,
    VALOR_ASEGURADO_POLIZA_ACTUAL,    
    TIPO_DOCUMENTO_TOMADOR,
    KEY_ID_TOMADOR,
    FECHA_INICIO_POLIZA,
    FECHA_FIN_ENDOSO,
    FECHA_FIN_POLIZA,
    CODIGO_COBERTURA,
    FORMAT_DATE('%Y-%m', CURRENT_DATE()) AS FECHA_ALERTA_MES, 
    CURRENT_DATE() AS FECHA_ALERTA

FROM ranked_policies rp

# Solo póliza más reciente por tomador
WHERE rp.row_num = 1

# Evitar duplicados ya presentes en la tabla
  AND NOT EXISTS (
    SELECT 1
    FROM sb-sandbox-usuarios.sandbox_cumplimiento.COM_0115_VISOR_REPO existing
    WHERE existing.NUMERO_POLIZA_ANTERIOR = rp.NUMERO_POLIZA_ANTERIOR
      AND existing.NUMERO_POLIZA_ACTUAL = rp.NUMERO_POLIZA_ACTUAL
      AND existing.TIPO_DOCUMENTO_TOMADOR = rp.TIPO_DOCUMENTO_TOMADOR
      AND existing.KEY_ID_TOMADOR = rp.KEY_ID_TOMADOR
  )

ORDER BY rp.FECHA_INICIO_POLIZA DESC;
